--------------------------------------------------------
--  File created - Tuesday-May-24-2022   
--------------------------------------------------------
DROP SEQUENCE "ASGDB"."DEMO_CUST_SEQ";
DROP SEQUENCE "ASGDB"."DEMO_ORDER_ITEMS_SEQ";
DROP SEQUENCE "ASGDB"."DEMO_ORD_SEQ";
DROP SEQUENCE "ASGDB"."DEMO_PROD_SEQ";
DROP SEQUENCE "ASGDB"."DEMO_USERS_SEQ";
DROP TABLE "ASGDB"."ACHIEVEMENT" cascade constraints;
DROP TABLE "ASGDB"."APEX$_ACL" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_FILES" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_HISTORY" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_LINKS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_NOTES" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_ROWS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_TAGS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" cascade constraints;
DROP TABLE "ASGDB"."ATTENDANCE_RECORD" cascade constraints;
DROP TABLE "ASGDB"."CLASSROOM" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_RECORD" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_UNIT" cascade constraints;
DROP TABLE "ASGDB"."DISCIPLINE_RECORD" cascade constraints;
DROP TABLE "ASGDB"."EXAMINATION_RESULT" cascade constraints;
DROP TABLE "ASGDB"."GUARDIAN" cascade constraints;
DROP TABLE "ASGDB"."RELATIONSHIP" cascade constraints;
DROP TABLE "ASGDB"."SCHEDULE_SLOT" cascade constraints;
DROP TABLE "ASGDB"."STUDENT" cascade constraints;
DROP TABLE "ASGDB"."SUBJECT" cascade constraints;
DROP TABLE "ASGDB"."SUBJECT_RESULT" cascade constraints;
DROP TABLE "ASGDB"."TEACHER" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_RECORD" cascade constraints;
DROP TABLE "ASGDB"."STUDENT" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_ROWS" cascade constraints;
DROP TABLE "ASGDB"."TEACHER" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_UNIT" cascade constraints;
DROP TABLE "ASGDB"."GUARDIAN" cascade constraints;
DROP TABLE "ASGDB"."CLASSROOM" cascade constraints;
DROP TABLE "ASGDB"."SUBJECT" cascade constraints;
DROP TABLE "ASGDB"."EXAMINATION_RESULT" cascade constraints;
DROP TABLE "ASGDB"."ACHIEVEMENT" cascade constraints;
DROP TABLE "ASGDB"."APEX$_ACL" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_FILES" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_HISTORY" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_LINKS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_NOTES" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_TAGS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" cascade constraints;
DROP TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" cascade constraints;
DROP TABLE "ASGDB"."ATTENDANCE_RECORD" cascade constraints;
DROP TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" cascade constraints;
DROP TABLE "ASGDB"."DISCIPLINE_RECORD" cascade constraints;
DROP TABLE "ASGDB"."RELATIONSHIP" cascade constraints;
DROP TABLE "ASGDB"."SCHEDULE_SLOT" cascade constraints;
DROP TABLE "ASGDB"."SUBJECT_RESULT" cascade constraints;
DROP TABLE "ASGDB"."BIN$O6FaBluJRxK9k5SUxIcdWA==$0" cascade constraints;
DROP FUNCTION "ASGDB"."CUSTOM_AUTH";
DROP FUNCTION "ASGDB"."CUSTOM_HASH";
DROP FUNCTION "APEX_040000"."V";
DROP FUNCTION "ASGDB"."CUSTOM_HASH";
DROP SYNONYM "PUBLIC"."DUAL";
DROP SYNONYM "PUBLIC"."V";
DROP SYNONYM "PUBLIC"."APEX_APPLICATION_GLOBAL";
DROP SYNONYM "PUBLIC"."APEX_WS_DATA_GRID_COL";
DROP SYNONYM "PUBLIC"."DBMS_LOB";
DROP SYNONYM "PUBLIC"."DBMS_OBFUSCATION_TOOLKIT";
DROP SYNONYM "PUBLIC"."UTL_RAW";
--------------------------------------------------------
--  DDL for Sequence DEMO_CUST_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ASGDB"."DEMO_CUST_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORDER_ITEMS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ASGDB"."DEMO_ORDER_ITEMS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_ORD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ASGDB"."DEMO_ORD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_PROD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ASGDB"."DEMO_PROD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEMO_USERS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "ASGDB"."DEMO_USERS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ACHIEVEMENT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."ACHIEVEMENT" 
   (	"ACHIEVEMENT_ID" VARCHAR2(30 BYTE), 
	"RECORD_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"ACHIEVEMENT_NAME" VARCHAR2(30 BYTE), 
	"ACHIEVEMENT_LEVEL" VARCHAR2(20 BYTE), 
	"ACHIEVEMENT_RANKING" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_ACL
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_ACL" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"USERNAME" VARCHAR2(255 BYTE), 
	"PRIV" VARCHAR2(1 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_FILES
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_FILES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"IMAGE_ALIAS" VARCHAR2(255 BYTE), 
	"IMAGE_ATTRIBUTES" VARCHAR2(255 BYTE), 
	"CONTENT" BLOB, 
	"CONTENT_LAST_UPDATE" DATE, 
	"MIME_TYPE" VARCHAR2(255 BYTE), 
	"CONTENT_CHARSET" VARCHAR2(255 BYTE), 
	"CONTENT_FILENAME" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_HISTORY
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_HISTORY" 
   (	"ROW_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"COLUMN_NAME" VARCHAR2(255 BYTE), 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"NEW_VALUE" VARCHAR2(4000 BYTE), 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_LINKS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_LINKS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"SHOW_ON_HOMEPAGE" VARCHAR2(1 BYTE), 
	"LINK_NAME" VARCHAR2(255 BYTE), 
	"URL" VARCHAR2(4000 BYTE), 
	"LINK_DESCRIPTION" VARCHAR2(4000 BYTE), 
	"DISPLAY_SEQUENCE" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_NOTES
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_NOTES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"CONTENT" CLOB, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_ROWS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_ROWS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"UNIQUE_VALUE" VARCHAR2(255 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"PARENT_ROW_ID" NUMBER, 
	"OWNER" VARCHAR2(255 BYTE), 
	"GEOCODE" VARCHAR2(512 BYTE), 
	"LOAD_ORDER" NUMBER, 
	"CHANGE_COUNT" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE), 
	"C001" VARCHAR2(4000 BYTE), 
	"C002" VARCHAR2(4000 BYTE), 
	"C003" VARCHAR2(4000 BYTE), 
	"C004" VARCHAR2(4000 BYTE), 
	"C005" VARCHAR2(4000 BYTE), 
	"C006" VARCHAR2(4000 BYTE), 
	"C007" VARCHAR2(4000 BYTE), 
	"C008" VARCHAR2(4000 BYTE), 
	"C009" VARCHAR2(4000 BYTE), 
	"C010" VARCHAR2(4000 BYTE), 
	"C011" VARCHAR2(4000 BYTE), 
	"C012" VARCHAR2(4000 BYTE), 
	"C013" VARCHAR2(4000 BYTE), 
	"C014" VARCHAR2(4000 BYTE), 
	"C015" VARCHAR2(4000 BYTE), 
	"C016" VARCHAR2(4000 BYTE), 
	"C017" VARCHAR2(4000 BYTE), 
	"C018" VARCHAR2(4000 BYTE), 
	"C019" VARCHAR2(4000 BYTE), 
	"C020" VARCHAR2(4000 BYTE), 
	"C021" VARCHAR2(4000 BYTE), 
	"C022" VARCHAR2(4000 BYTE), 
	"C023" VARCHAR2(4000 BYTE), 
	"C024" VARCHAR2(4000 BYTE), 
	"C025" VARCHAR2(4000 BYTE), 
	"C026" VARCHAR2(4000 BYTE), 
	"C027" VARCHAR2(4000 BYTE), 
	"C028" VARCHAR2(4000 BYTE), 
	"C029" VARCHAR2(4000 BYTE), 
	"C030" VARCHAR2(4000 BYTE), 
	"C031" VARCHAR2(4000 BYTE), 
	"C032" VARCHAR2(4000 BYTE), 
	"C033" VARCHAR2(4000 BYTE), 
	"C034" VARCHAR2(4000 BYTE), 
	"C035" VARCHAR2(4000 BYTE), 
	"C036" VARCHAR2(4000 BYTE), 
	"C037" VARCHAR2(4000 BYTE), 
	"C038" VARCHAR2(4000 BYTE), 
	"C039" VARCHAR2(4000 BYTE), 
	"C040" VARCHAR2(4000 BYTE), 
	"C041" VARCHAR2(4000 BYTE), 
	"C042" VARCHAR2(4000 BYTE), 
	"C043" VARCHAR2(4000 BYTE), 
	"C044" VARCHAR2(4000 BYTE), 
	"C045" VARCHAR2(4000 BYTE), 
	"C046" VARCHAR2(4000 BYTE), 
	"C047" VARCHAR2(4000 BYTE), 
	"C048" VARCHAR2(4000 BYTE), 
	"C049" VARCHAR2(4000 BYTE), 
	"C050" VARCHAR2(4000 BYTE), 
	"N001" NUMBER, 
	"N002" NUMBER, 
	"N003" NUMBER, 
	"N004" NUMBER, 
	"N005" NUMBER, 
	"N006" NUMBER, 
	"N007" NUMBER, 
	"N008" NUMBER, 
	"N009" NUMBER, 
	"N010" NUMBER, 
	"N011" NUMBER, 
	"N012" NUMBER, 
	"N013" NUMBER, 
	"N014" NUMBER, 
	"N015" NUMBER, 
	"N016" NUMBER, 
	"N017" NUMBER, 
	"N018" NUMBER, 
	"N019" NUMBER, 
	"N020" NUMBER, 
	"N021" NUMBER, 
	"N022" NUMBER, 
	"N023" NUMBER, 
	"N024" NUMBER, 
	"N025" NUMBER, 
	"N026" NUMBER, 
	"N027" NUMBER, 
	"N028" NUMBER, 
	"N029" NUMBER, 
	"N030" NUMBER, 
	"N031" NUMBER, 
	"N032" NUMBER, 
	"N033" NUMBER, 
	"N034" NUMBER, 
	"N035" NUMBER, 
	"N036" NUMBER, 
	"N037" NUMBER, 
	"N038" NUMBER, 
	"N039" NUMBER, 
	"N040" NUMBER, 
	"N041" NUMBER, 
	"N042" NUMBER, 
	"N043" NUMBER, 
	"N044" NUMBER, 
	"N045" NUMBER, 
	"N046" NUMBER, 
	"N047" NUMBER, 
	"N048" NUMBER, 
	"N049" NUMBER, 
	"N050" NUMBER, 
	"D001" DATE, 
	"D002" DATE, 
	"D003" DATE, 
	"D004" DATE, 
	"D005" DATE, 
	"D006" DATE, 
	"D007" DATE, 
	"D008" DATE, 
	"D009" DATE, 
	"D010" DATE, 
	"D011" DATE, 
	"D012" DATE, 
	"D013" DATE, 
	"D014" DATE, 
	"D015" DATE, 
	"D016" DATE, 
	"D017" DATE, 
	"D018" DATE, 
	"D019" DATE, 
	"D020" DATE, 
	"D021" DATE, 
	"D022" DATE, 
	"D023" DATE, 
	"D024" DATE, 
	"D025" DATE, 
	"D026" DATE, 
	"D027" DATE, 
	"D028" DATE, 
	"D029" DATE, 
	"D030" DATE, 
	"D031" DATE, 
	"D032" DATE, 
	"D033" DATE, 
	"D034" DATE, 
	"D035" DATE, 
	"D036" DATE, 
	"D037" DATE, 
	"D038" DATE, 
	"D039" DATE, 
	"D040" DATE, 
	"D041" DATE, 
	"D042" DATE, 
	"D043" DATE, 
	"D044" DATE, 
	"D045" DATE, 
	"D046" DATE, 
	"D047" DATE, 
	"D048" DATE, 
	"D049" DATE, 
	"D050" DATE, 
	"CLOB001" CLOB, 
	"SEARCH_CLOB" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CLOB001") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SEARCH_CLOB") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_TAGS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_TAGS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAG" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"DISPLAY_SEQUENCE" NUMBER, 
	"SECTION_TYPE" VARCHAR2(30 BYTE), 
	"TITLE" VARCHAR2(4000 BYTE), 
	"CONTENT" CLOB, 
	"CONTENT_UPPER" CLOB, 
	"NAV_START_WEBPAGE_ID" NUMBER, 
	"NAV_MAX_LEVEL" NUMBER, 
	"NAV_INCLUDE_LINK" VARCHAR2(1 BYTE), 
	"DATA_GRID_ID" NUMBER, 
	"REPORT_ID" NUMBER, 
	"DATA_SECTION_STYLE" NUMBER, 
	"CHART_TYPE" VARCHAR2(255 BYTE), 
	"CHART_3D" VARCHAR2(1 BYTE), 
	"CHART_LABEL" VARCHAR2(255 BYTE), 
	"LABEL_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_VALUE" VARCHAR2(255 BYTE), 
	"VALUE_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_AGGREGATE" VARCHAR2(255 BYTE), 
	"CHART_SORTING" VARCHAR2(255 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTENT_UPPER") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" 
   (	"SECTION_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"OLD_DISPLAY_SEQUENCE" NUMBER, 
	"NEW_DISPLAY_SEQUENCE" NUMBER, 
	"OLD_TITLE" VARCHAR2(4000 BYTE), 
	"NEW_TITLE" VARCHAR2(4000 BYTE), 
	"OLD_CONTENT" CLOB, 
	"NEW_CONTENT" CLOB, 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OLD_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NEW_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ATTENDANCE_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."ATTENDANCE_RECORD" 
   (	"ATTENDANCE_DATE" DATE, 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"ATTENDANCE_STATUE" VARCHAR2(20 BYTE), 
	"ATTENDANCE_DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLASSROOM
--------------------------------------------------------

  CREATE TABLE "ASGDB"."CLASSROOM" 
   (	"CLASS_ID" VARCHAR2(20 BYTE), 
	"CLASS_TEACHER" VARCHAR2(20 BYTE), 
	"CLASS_MONITOR" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_MEMBERSHIP
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" 
   (	"RECORD_ID" VARCHAR2(20 BYTE), 
	"UNIT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"POSITION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_RECORD" 
   (	"RECORD_ID" VARCHAR2(20 BYTE), 
	"COCURRICULAR_MARK" VARCHAR2(20 BYTE), 
	"YEAR" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_UNIT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_UNIT" 
   (	"UNIT_ID" VARCHAR2(20 BYTE), 
	"UNIT_TYPE" VARCHAR2(50 BYTE), 
	"UNIT_NAME" VARCHAR2(128 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DISCIPLINE_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."DISCIPLINE_RECORD" 
   (	"DISCIPLINE_ID" VARCHAR2(20 BYTE), 
	"VIOLATION" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(256 BYTE), 
	"DATE_VIOLATED" DATE, 
	"DEMERIT" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EXAMINATION_RESULT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."EXAMINATION_RESULT" 
   (	"RESULT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"EXAM_TYPE" VARCHAR2(20 BYTE), 
	"YEAR" VARCHAR2(20 BYTE), 
	"RANKING_CLASS" VARCHAR2(20 BYTE), 
	"RANKING_FORM" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"TEACHER_REMARK" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GUARDIAN
--------------------------------------------------------

  CREATE TABLE "ASGDB"."GUARDIAN" 
   (	"GUARDIAN_ID" VARCHAR2(20 BYTE), 
	"GUARDIAN_NAME" VARCHAR2(128 BYTE), 
	"GUARDIAN_IC" VARCHAR2(20 BYTE), 
	"GUARDIAN_ADDRESS" VARCHAR2(200 BYTE), 
	"GUARDIAN_CONTACTNO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RELATIONSHIP
--------------------------------------------------------

  CREATE TABLE "ASGDB"."RELATIONSHIP" 
   (	"GUARDIAN_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"RELATIONSHIP" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SCHEDULE_SLOT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SCHEDULE_SLOT" 
   (	"SLOT_ID" VARCHAR2(20 BYTE), 
	"CLASS_ID" VARCHAR2(20 BYTE), 
	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"TEACHER_ID" VARCHAR2(20 BYTE), 
	"DAY" VARCHAR2(20 BYTE), 
	"TIME_BEGIN" NUMBER, 
	"TIME_END" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."STUDENT" 
   (	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_NAME" VARCHAR2(128 BYTE), 
	"STUDENT_IC" VARCHAR2(20 BYTE), 
	"STUDENT_ADDRESS" VARCHAR2(200 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"CLASS_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SUBJECT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SUBJECT" 
   (	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"SUBJECT_NAME" VARCHAR2(20 BYTE), 
	"SUBJECT_COORDINATOR" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SUBJECT_RESULT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SUBJECT_RESULT" 
   (	"RESULT_ID" VARCHAR2(20 BYTE), 
	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"MARK" VARCHAR2(20 BYTE), 
	"GRADE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table TEACHER
--------------------------------------------------------

  CREATE TABLE "ASGDB"."TEACHER" 
   (	"TEACHER_ID" VARCHAR2(20 BYTE), 
	"TEACHER_NAME" VARCHAR2(128 BYTE), 
	"TEACHER_IC" VARCHAR2(20 BYTE), 
	"TEACHER_ADDRESS" VARCHAR2(200 BYTE), 
	"TEACHER_CONTACTNO" VARCHAR2(20 BYTE), 
	"TEACHER_GENDER" VARCHAR2(20 BYTE), 
	"UNIT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_RECORD" 
   (	"RECORD_ID" VARCHAR2(20 BYTE), 
	"COCURRICULAR_MARK" VARCHAR2(20 BYTE), 
	"YEAR" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."STUDENT" 
   (	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_NAME" VARCHAR2(128 BYTE), 
	"STUDENT_IC" VARCHAR2(20 BYTE), 
	"STUDENT_ADDRESS" VARCHAR2(200 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"CLASS_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_ROWS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_ROWS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"UNIQUE_VALUE" VARCHAR2(255 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"PARENT_ROW_ID" NUMBER, 
	"OWNER" VARCHAR2(255 BYTE), 
	"GEOCODE" VARCHAR2(512 BYTE), 
	"LOAD_ORDER" NUMBER, 
	"CHANGE_COUNT" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE), 
	"C001" VARCHAR2(4000 BYTE), 
	"C002" VARCHAR2(4000 BYTE), 
	"C003" VARCHAR2(4000 BYTE), 
	"C004" VARCHAR2(4000 BYTE), 
	"C005" VARCHAR2(4000 BYTE), 
	"C006" VARCHAR2(4000 BYTE), 
	"C007" VARCHAR2(4000 BYTE), 
	"C008" VARCHAR2(4000 BYTE), 
	"C009" VARCHAR2(4000 BYTE), 
	"C010" VARCHAR2(4000 BYTE), 
	"C011" VARCHAR2(4000 BYTE), 
	"C012" VARCHAR2(4000 BYTE), 
	"C013" VARCHAR2(4000 BYTE), 
	"C014" VARCHAR2(4000 BYTE), 
	"C015" VARCHAR2(4000 BYTE), 
	"C016" VARCHAR2(4000 BYTE), 
	"C017" VARCHAR2(4000 BYTE), 
	"C018" VARCHAR2(4000 BYTE), 
	"C019" VARCHAR2(4000 BYTE), 
	"C020" VARCHAR2(4000 BYTE), 
	"C021" VARCHAR2(4000 BYTE), 
	"C022" VARCHAR2(4000 BYTE), 
	"C023" VARCHAR2(4000 BYTE), 
	"C024" VARCHAR2(4000 BYTE), 
	"C025" VARCHAR2(4000 BYTE), 
	"C026" VARCHAR2(4000 BYTE), 
	"C027" VARCHAR2(4000 BYTE), 
	"C028" VARCHAR2(4000 BYTE), 
	"C029" VARCHAR2(4000 BYTE), 
	"C030" VARCHAR2(4000 BYTE), 
	"C031" VARCHAR2(4000 BYTE), 
	"C032" VARCHAR2(4000 BYTE), 
	"C033" VARCHAR2(4000 BYTE), 
	"C034" VARCHAR2(4000 BYTE), 
	"C035" VARCHAR2(4000 BYTE), 
	"C036" VARCHAR2(4000 BYTE), 
	"C037" VARCHAR2(4000 BYTE), 
	"C038" VARCHAR2(4000 BYTE), 
	"C039" VARCHAR2(4000 BYTE), 
	"C040" VARCHAR2(4000 BYTE), 
	"C041" VARCHAR2(4000 BYTE), 
	"C042" VARCHAR2(4000 BYTE), 
	"C043" VARCHAR2(4000 BYTE), 
	"C044" VARCHAR2(4000 BYTE), 
	"C045" VARCHAR2(4000 BYTE), 
	"C046" VARCHAR2(4000 BYTE), 
	"C047" VARCHAR2(4000 BYTE), 
	"C048" VARCHAR2(4000 BYTE), 
	"C049" VARCHAR2(4000 BYTE), 
	"C050" VARCHAR2(4000 BYTE), 
	"N001" NUMBER, 
	"N002" NUMBER, 
	"N003" NUMBER, 
	"N004" NUMBER, 
	"N005" NUMBER, 
	"N006" NUMBER, 
	"N007" NUMBER, 
	"N008" NUMBER, 
	"N009" NUMBER, 
	"N010" NUMBER, 
	"N011" NUMBER, 
	"N012" NUMBER, 
	"N013" NUMBER, 
	"N014" NUMBER, 
	"N015" NUMBER, 
	"N016" NUMBER, 
	"N017" NUMBER, 
	"N018" NUMBER, 
	"N019" NUMBER, 
	"N020" NUMBER, 
	"N021" NUMBER, 
	"N022" NUMBER, 
	"N023" NUMBER, 
	"N024" NUMBER, 
	"N025" NUMBER, 
	"N026" NUMBER, 
	"N027" NUMBER, 
	"N028" NUMBER, 
	"N029" NUMBER, 
	"N030" NUMBER, 
	"N031" NUMBER, 
	"N032" NUMBER, 
	"N033" NUMBER, 
	"N034" NUMBER, 
	"N035" NUMBER, 
	"N036" NUMBER, 
	"N037" NUMBER, 
	"N038" NUMBER, 
	"N039" NUMBER, 
	"N040" NUMBER, 
	"N041" NUMBER, 
	"N042" NUMBER, 
	"N043" NUMBER, 
	"N044" NUMBER, 
	"N045" NUMBER, 
	"N046" NUMBER, 
	"N047" NUMBER, 
	"N048" NUMBER, 
	"N049" NUMBER, 
	"N050" NUMBER, 
	"D001" DATE, 
	"D002" DATE, 
	"D003" DATE, 
	"D004" DATE, 
	"D005" DATE, 
	"D006" DATE, 
	"D007" DATE, 
	"D008" DATE, 
	"D009" DATE, 
	"D010" DATE, 
	"D011" DATE, 
	"D012" DATE, 
	"D013" DATE, 
	"D014" DATE, 
	"D015" DATE, 
	"D016" DATE, 
	"D017" DATE, 
	"D018" DATE, 
	"D019" DATE, 
	"D020" DATE, 
	"D021" DATE, 
	"D022" DATE, 
	"D023" DATE, 
	"D024" DATE, 
	"D025" DATE, 
	"D026" DATE, 
	"D027" DATE, 
	"D028" DATE, 
	"D029" DATE, 
	"D030" DATE, 
	"D031" DATE, 
	"D032" DATE, 
	"D033" DATE, 
	"D034" DATE, 
	"D035" DATE, 
	"D036" DATE, 
	"D037" DATE, 
	"D038" DATE, 
	"D039" DATE, 
	"D040" DATE, 
	"D041" DATE, 
	"D042" DATE, 
	"D043" DATE, 
	"D044" DATE, 
	"D045" DATE, 
	"D046" DATE, 
	"D047" DATE, 
	"D048" DATE, 
	"D049" DATE, 
	"D050" DATE, 
	"CLOB001" CLOB, 
	"SEARCH_CLOB" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CLOB001") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("SEARCH_CLOB") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table TEACHER
--------------------------------------------------------

  CREATE TABLE "ASGDB"."TEACHER" 
   (	"TEACHER_ID" VARCHAR2(20 BYTE), 
	"TEACHER_NAME" VARCHAR2(128 BYTE), 
	"TEACHER_IC" VARCHAR2(20 BYTE), 
	"TEACHER_ADDRESS" VARCHAR2(200 BYTE), 
	"TEACHER_CONTACTNO" VARCHAR2(20 BYTE), 
	"TEACHER_GENDER" VARCHAR2(20 BYTE), 
	"UNIT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_UNIT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_UNIT" 
   (	"UNIT_ID" VARCHAR2(20 BYTE), 
	"UNIT_TYPE" VARCHAR2(50 BYTE), 
	"UNIT_NAME" VARCHAR2(128 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GUARDIAN
--------------------------------------------------------

  CREATE TABLE "ASGDB"."GUARDIAN" 
   (	"GUARDIAN_ID" VARCHAR2(20 BYTE), 
	"GUARDIAN_NAME" VARCHAR2(128 BYTE), 
	"GUARDIAN_IC" VARCHAR2(20 BYTE), 
	"GUARDIAN_ADDRESS" VARCHAR2(200 BYTE), 
	"GUARDIAN_CONTACTNO" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLASSROOM
--------------------------------------------------------

  CREATE TABLE "ASGDB"."CLASSROOM" 
   (	"CLASS_ID" VARCHAR2(20 BYTE), 
	"CLASS_TEACHER" VARCHAR2(20 BYTE), 
	"CLASS_MONITOR" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SUBJECT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SUBJECT" 
   (	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"SUBJECT_NAME" VARCHAR2(20 BYTE), 
	"SUBJECT_COORDINATOR" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EXAMINATION_RESULT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."EXAMINATION_RESULT" 
   (	"RESULT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"EXAM_TYPE" VARCHAR2(20 BYTE), 
	"YEAR" VARCHAR2(20 BYTE), 
	"RANKING_CLASS" VARCHAR2(20 BYTE), 
	"RANKING_FORM" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"TEACHER_REMARK" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ACHIEVEMENT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."ACHIEVEMENT" 
   (	"ACHIEVEMENT_ID" VARCHAR2(30 BYTE), 
	"RECORD_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"ACHIEVEMENT_NAME" VARCHAR2(30 BYTE), 
	"ACHIEVEMENT_LEVEL" VARCHAR2(20 BYTE), 
	"ACHIEVEMENT_RANKING" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_ACL
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_ACL" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"USERNAME" VARCHAR2(255 BYTE), 
	"PRIV" VARCHAR2(1 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_FILES
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_FILES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"IMAGE_ALIAS" VARCHAR2(255 BYTE), 
	"IMAGE_ATTRIBUTES" VARCHAR2(255 BYTE), 
	"CONTENT" BLOB, 
	"CONTENT_LAST_UPDATE" DATE, 
	"MIME_TYPE" VARCHAR2(255 BYTE), 
	"CONTENT_CHARSET" VARCHAR2(255 BYTE), 
	"CONTENT_FILENAME" VARCHAR2(500 BYTE), 
	"DESCRIPTION" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_HISTORY
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_HISTORY" 
   (	"ROW_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"COLUMN_NAME" VARCHAR2(255 BYTE), 
	"OLD_VALUE" VARCHAR2(4000 BYTE), 
	"NEW_VALUE" VARCHAR2(4000 BYTE), 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_LINKS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_LINKS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAGS" VARCHAR2(4000 BYTE), 
	"SHOW_ON_HOMEPAGE" VARCHAR2(1 BYTE), 
	"LINK_NAME" VARCHAR2(255 BYTE), 
	"URL" VARCHAR2(4000 BYTE), 
	"LINK_DESCRIPTION" VARCHAR2(4000 BYTE), 
	"DISPLAY_SEQUENCE" NUMBER, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_NOTES
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_NOTES" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"CONTENT" CLOB, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_TAGS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_TAGS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"DATA_GRID_ID" NUMBER, 
	"ROW_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"COMPONENT_LEVEL" VARCHAR2(30 BYTE), 
	"TAG" VARCHAR2(4000 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" 
   (	"ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"DISPLAY_SEQUENCE" NUMBER, 
	"SECTION_TYPE" VARCHAR2(30 BYTE), 
	"TITLE" VARCHAR2(4000 BYTE), 
	"CONTENT" CLOB, 
	"CONTENT_UPPER" CLOB, 
	"NAV_START_WEBPAGE_ID" NUMBER, 
	"NAV_MAX_LEVEL" NUMBER, 
	"NAV_INCLUDE_LINK" VARCHAR2(1 BYTE), 
	"DATA_GRID_ID" NUMBER, 
	"REPORT_ID" NUMBER, 
	"DATA_SECTION_STYLE" NUMBER, 
	"CHART_TYPE" VARCHAR2(255 BYTE), 
	"CHART_3D" VARCHAR2(1 BYTE), 
	"CHART_LABEL" VARCHAR2(255 BYTE), 
	"LABEL_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_VALUE" VARCHAR2(255 BYTE), 
	"VALUE_AXIS_TITLE" VARCHAR2(255 BYTE), 
	"CHART_AGGREGATE" VARCHAR2(255 BYTE), 
	"CHART_SORTING" VARCHAR2(255 BYTE), 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(255 BYTE), 
	"UPDATED_ON" DATE, 
	"UPDATED_BY" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("CONTENT_UPPER") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  CREATE TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" 
   (	"SECTION_ID" NUMBER, 
	"WS_APP_ID" NUMBER, 
	"WEBPAGE_ID" NUMBER, 
	"OLD_DISPLAY_SEQUENCE" NUMBER, 
	"NEW_DISPLAY_SEQUENCE" NUMBER, 
	"OLD_TITLE" VARCHAR2(4000 BYTE), 
	"NEW_TITLE" VARCHAR2(4000 BYTE), 
	"OLD_CONTENT" CLOB, 
	"NEW_CONTENT" CLOB, 
	"APPLICATION_USER_ID" VARCHAR2(255 BYTE), 
	"CHANGE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("OLD_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) 
 LOB ("NEW_CONTENT") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ATTENDANCE_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."ATTENDANCE_RECORD" 
   (	"ATTENDANCE_DATE" DATE, 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"ATTENDANCE_STATUE" VARCHAR2(20 BYTE), 
	"ATTENDANCE_DESCRIPTION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COCURRICULAR_MEMBERSHIP
--------------------------------------------------------

  CREATE TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" 
   (	"RECORD_ID" VARCHAR2(20 BYTE), 
	"UNIT_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"POSITION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DISCIPLINE_RECORD
--------------------------------------------------------

  CREATE TABLE "ASGDB"."DISCIPLINE_RECORD" 
   (	"DISCIPLINE_ID" VARCHAR2(20 BYTE), 
	"VIOLATION" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(256 BYTE), 
	"DATE_VIOLATED" DATE, 
	"DEMERIT" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RELATIONSHIP
--------------------------------------------------------

  CREATE TABLE "ASGDB"."RELATIONSHIP" 
   (	"GUARDIAN_ID" VARCHAR2(20 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"RELATIONSHIP" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SCHEDULE_SLOT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SCHEDULE_SLOT" 
   (	"SLOT_ID" VARCHAR2(20 BYTE), 
	"CLASS_ID" VARCHAR2(20 BYTE), 
	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"TEACHER_ID" VARCHAR2(20 BYTE), 
	"DAY" VARCHAR2(20 BYTE), 
	"TIME_BEGIN" NUMBER, 
	"TIME_END" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SUBJECT_RESULT
--------------------------------------------------------

  CREATE TABLE "ASGDB"."SUBJECT_RESULT" 
   (	"RESULT_ID" VARCHAR2(20 BYTE), 
	"SUBJECT_CODE" VARCHAR2(20 BYTE), 
	"MARK" VARCHAR2(20 BYTE), 
	"GRADE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into ASGDB.ACHIEVEMENT
SET DEFINE OFF;
Insert into ASGDB.ACHIEVEMENT (ACHIEVEMENT_ID,RECORD_ID,STUDENT_ID,ACHIEVEMENT_NAME,ACHIEVEMENT_LEVEL,ACHIEVEMENT_RANKING) values ('AC-00001','CCR-002','S-002','Selangor Chess Competition','State','FIRST');
Insert into ASGDB.ACHIEVEMENT (ACHIEVEMENT_ID,RECORD_ID,STUDENT_ID,ACHIEVEMENT_NAME,ACHIEVEMENT_LEVEL,ACHIEVEMENT_RANKING) values ('AC-00002','CCR-007','S-007','National Basketball League
','National','SECOND');
Insert into ASGDB.ACHIEVEMENT (ACHIEVEMENT_ID,RECORD_ID,STUDENT_ID,ACHIEVEMENT_NAME,ACHIEVEMENT_LEVEL,ACHIEVEMENT_RANKING) values ('AC-00004','CCR-002','S-002','ICPC COMPETITION','International','SECOND');
REM INSERTING into ASGDB.APEX$_ACL
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_FILES
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_HISTORY
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_LINKS
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_NOTES
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_ROWS
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_TAGS
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_WEBPG_SECTIONS
SET DEFINE OFF;
REM INSERTING into ASGDB.APEX$_WS_WEBPG_SECTION_HISTORY
SET DEFINE OFF;
REM INSERTING into ASGDB.ATTENDANCE_RECORD
SET DEFINE OFF;
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-001','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-002','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-003','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-004','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-005','Absent','Family reasons');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-006','Absent','Covid-19');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-007','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-008','Absent','Covid-19');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-009','Present','-');
Insert into ASGDB.ATTENDANCE_RECORD (ATTENDANCE_DATE,STUDENT_ID,ATTENDANCE_STATUE,ATTENDANCE_DESCRIPTION) values (to_date('01/06/2022','DD/MM/RRRR'),'S-010','Present','-');
REM INSERTING into ASGDB.CLASSROOM
SET DEFINE OFF;
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1A','T-001','S-001');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1B','T-002','S-002');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1C','T-003','S-003');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1D','T-004','S-004');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1E','T-005','S-005');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1F','T-006','S-006');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1G','T-007','S-007');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1H','T-008','S-008');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1I','T-009','S-009');
Insert into ASGDB.CLASSROOM (CLASS_ID,CLASS_TEACHER,CLASS_MONITOR) values ('1J','T-010','S-010');
REM INSERTING into ASGDB.COCURRICULAR_MEMBERSHIP
SET DEFINE OFF;
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-002','CCU-001','S-002','MEMBER');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-002','CCU-006','S-002','VICE PRECIDENT');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-002','CCU-007','S-002','MEMBER');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-007','CCU-003','S-007','SECRETARY');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-007','CCU-005','S-007','MEMBER');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-007','CCU-008','S-007','PRESIDENT');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-009','CCU-002','S-009','TRESURER');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-009','CCU-005','S-009','SECRETARY');
Insert into ASGDB.COCURRICULAR_MEMBERSHIP (RECORD_ID,UNIT_ID,STUDENT_ID,POSITION) values ('CCR-009','CCU-007','S-009','MEMBER');
REM INSERTING into ASGDB.COCURRICULAR_RECORD
SET DEFINE OFF;
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-001','77','2021','S-001');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-002','84','2021','S-002');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-003','72','2021','S-003');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-004','75','2021','S-004');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-005','81','2021','S-005');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-006','73','2021','S-006');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-007','91','2021','S-007');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-008','76','2021','S-008');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-009','83','2021','S-009');
Insert into ASGDB.COCURRICULAR_RECORD (RECORD_ID,COCURRICULAR_MARK,YEAR,STUDENT_ID) values ('CCR-010','84','2021','S-010');
REM INSERTING into ASGDB.COCURRICULAR_UNIT
SET DEFINE OFF;
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-001','UNIFORM BODY','SCOUT');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-002','UNIFORM BODY','ST.JOHN');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-003','UNIFORM BODY','CADET POLICE');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-004','CLUB','ENGLISH');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-005','CLUB','ROBOTICS');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-006','CLUB','CHESS');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-007','SPORT','BADMINTON');
Insert into ASGDB.COCURRICULAR_UNIT (UNIT_ID,UNIT_TYPE,UNIT_NAME) values ('CCU-008','SPORT','BASKETBALL');
REM INSERTING into ASGDB.DISCIPLINE_RECORD
SET DEFINE OFF;
Insert into ASGDB.DISCIPLINE_RECORD (DISCIPLINE_ID,VIOLATION,DESCRIPTION,DATE_VIOLATED,DEMERIT,STUDENT_ID) values ('D-001','LONG FINGERNAILS','Fingernail length longer than 0.7 cm',to_date('19/06/2021','DD/MM/RRRR'),'-1','S-001');
Insert into ASGDB.DISCIPLINE_RECORD (DISCIPLINE_ID,VIOLATION,DESCRIPTION,DATE_VIOLATED,DEMERIT,STUDENT_ID) values ('D-002','LONG HAIR (MALE)','Hair touches eyebrow',to_date('24/08/2021','DD/MM/RRRR'),'-1','S-004');
REM INSERTING into ASGDB.EXAMINATION_RESULT
SET DEFINE OFF;
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-001','S-001','Final-year Exam','2021','1','9','PASS','Excellent');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-002','S-002','Final-year Exam','2021','1','3','PASS','Good');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-003','S-003','Final-year Exam','2021','2','6','PASS','Excellent');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-004','S-004','Final-year Exam','2021','3','8','PASS','Need to work harder');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-005','S-005','Final-year Exam','2021','2','5','PASS','Excellent');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-006','S-006','Final-year Exam','2021','1','4','PASS','Good');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-007','S-007','Final-year Exam','2021','4','10','PASS','Good');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-008','S-008','Final-year Exam','2021','3','7','PASS','Need to work harder');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-009','S-009','Final-year Exam','2021','2','2','FAIL','Need to work harder');
Insert into ASGDB.EXAMINATION_RESULT (RESULT_ID,STUDENT_ID,EXAM_TYPE,YEAR,RANKING_CLASS,RANKING_FORM,STATUS,TEACHER_REMARK) values ('SR-010','S-010','Final-year Exam','2021','1','1','PASS','Need to work harder');
REM INSERTING into ASGDB.GUARDIAN
SET DEFINE OFF;
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-001','Phua Choo Kang','790708-10-0383','36, Jalan Puteri 4/10, Bandar Puteri, 47100 Puchong, Selangor','012-2347892');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-002','Sathish Kumar a/l Tirukishan','560127-10-8025','38, Jalan Bunga 6/5, Taman Maju Bunga, 47170 Puchong, Selangor ','011-23289678');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-003','Razin bin Afiq Adam','810512-10-2829','15, Jalan Meranti 2, Taman Meranti Jaya, 47170 Puchong, Selangor ','018-8828345');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-004','Lee Yi Kang','780609-10-6711','11, Jalan Meranti 3, Taman Meranti Jaya, 47170 Puchong, Selangor ','016-6969696');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-005','Richard Chuah Zhong Xing','770324-10-3323','32, Jalan Puteri 5/10, Bandar Puteri, 47100 Puchong, Selangor','016-6978232');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-006','Siti Rosmah binti Rozariah','810821-10-6882','15, Jalan Meranti 2, Taman Meranti Jaya, 47170 Puchong, Selangor ','019-9923267');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-007','Lim Ping Ying','811203-10-0732','36, Jalan Puteri 4/10, Bandar Puteri, 47100 Puchong, Selangor','019-1234567');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-008','Goh Mei Xin','800808-10-8082','28, Jalan Meranti 2, Taman Meranti Jaya, 47170 Puchong, Selangor ','018-5438764');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-009','Tan Fong Mei','790908-10-6968','32, Jalan Puteri 5/10, Bandar Puteri, 47100 Puchong, Selangor','012-2674535');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-010','Ahmad Adam bin Khairul Aming','770322-10-3219','21, Jalan Mas 2/6, Taman Mas, 47100 Puchong, Selangor ','011-12312345');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-011','Jamali Ros bin Afiq Bakar','750707-10-1771','22, Jalan Kenari 2/8, Taman Kenari Jaya, 47170 Puchong, Selangor','012-5678964');
Insert into ASGDB.GUARDIAN (GUARDIAN_ID,GUARDIAN_NAME,GUARDIAN_IC,GUARDIAN_ADDRESS,GUARDIAN_CONTACTNO) values ('G-012','Ain Batrisyah binti Romimi','820601-10-2288','12, Jalan Mas 5/6, Taman Mas, 47100 Puchong, Selangor ','016-7368392');
REM INSERTING into ASGDB.RELATIONSHIP
SET DEFINE OFF;
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-005','S-005','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-009','S-005','Mother');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-001','S-008','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-007','S-008','Mother');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-001','S-010','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-007','S-010','Mother');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-002','S-002','Grandfather');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-003','S-001','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-006','S-001','Mother');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-004','S-007','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-008','S-004','Mother');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-010','S-003','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-011','S-006','Father');
Insert into ASGDB.RELATIONSHIP (GUARDIAN_ID,STUDENT_ID,RELATIONSHIP) values ('G-012','S-009','Mother');
REM INSERTING into ASGDB.SCHEDULE_SLOT
SET DEFINE OFF;
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS01','1A','BC001','T-001','Monday',730,800);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS02','1A','SF001','T-010','Monday',800,900);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS03
','1A','SK001','T-009','Monday',900,1000);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS04','1D','SB001','T-008','Monday',1100,1130);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS10','1E','MM001','T-005','Monday',1100,1130);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS06','1F','GG001','T-006','Monday',730,800);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS07','1G','SJ001','T-003','Monday',730,800);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS08','1H','SC001','T-004','Monday',730,800);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS09','1I','BE001','T-002','Monday',1000,1100);
Insert into ASGDB.SCHEDULE_SLOT (SLOT_ID,CLASS_ID,SUBJECT_CODE,TEACHER_ID,DAY,TIME_BEGIN,TIME_END) values ('SS05','1J','BM001','T-007','Monday',900,1000);
REM INSERTING into ASGDB.STUDENT
SET DEFINE OFF;
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-001','Muhamad Wazir bin Razin','080319-10-0321','15, Jalan Meranti 2, Taman Meranti Jaya, 47170 Puchong, Selangor ','Male','1A');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-002','Mahaletchumy Veeran a/l Sathianathan','080425-10-0187','38, Jalan Bunga 6/5, Taman Maju Bunga, 47170 Puchong, Selangor ','Male','1B');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-003','Noor Syahmimi binti Azrin Farhan','080227-10-0222','21, Jalan Mas 2/6, Taman Mas, 47100 Puchong, Selangor ','Female','1B');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-004','Ying Liang Suen','081231-10-0123','28, Jalan Meranti 2, Taman Meranti Jaya, 47170 Puchong, Selangor ','Male','1C');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-005','Karen Chuah Yii Xie','080101-10-0322','32, Jalan Puteri 5/10, Bandar Puteri, 47100 Puchong, Selangor','Female','1C');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-006','Haji Hariz bin Jamali Ros','080520-10-0323','22, Jalan Kenari 2/8, Taman Kenari Jaya, 47170 Puchong, Selangor','Male','1C');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-007','Jason Lee Qing Foo','080819-10-0497','11, Jalan Meranti 3, Taman Meranti Jaya, 47170 Puchong, Selangor ','Male','1D');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-008','Phua Jie Ning','080122-10-0648','36, Jalan Puteri 4/10, Bandar Puteri, 47100 Puchong, Selangor','Female','1D');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-009','Nur Ayuni binti Izam Zulamin ','080609-10-0126','12, Jalan Mas 5/6, Taman Mas, 47100 Puchong, Selangor ','Female','1D');
Insert into ASGDB.STUDENT (STUDENT_ID,STUDENT_NAME,STUDENT_IC,STUDENT_ADDRESS,GENDER,CLASS_ID) values ('S-010','Phua Jie Xing','070715-10-0111','36, Jalan Puteri 4/10, Bandar Puteri, 47100 Puchong, Selangor','Female','1D');
REM INSERTING into ASGDB.SUBJECT
SET DEFINE OFF;
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('BC001','Chinese','T-001');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('SF001','Physics','T-002');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('SK001','Chemistry','T-003');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('SB001','Biology','T-004');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('MM001','Mathematics','T-005');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('GG001','Geography','T-006');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('SJ001','History','T-007');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('SC001','Science','T-008');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('BE001','English','T-009');
Insert into ASGDB.SUBJECT (SUBJECT_CODE,SUBJECT_NAME,SUBJECT_COORDINATOR) values ('BM001','Bahasa Melayu','T-010');
REM INSERTING into ASGDB.SUBJECT_RESULT
SET DEFINE OFF;
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','BM001','95','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','BE001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','SC001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','SJ001','56','C+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','GG001','87','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','MM001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','SB001','66','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','SK001','42','E');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','SF001','37','F');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-008','BC001','49','D');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','BM001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','BE001','66','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','SC001','42','E');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','SJ001','37','F');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','GG001','49','D');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','MM001','97','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','SB001','67','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','SK001','73','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','SF001','59','C+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-004','BC001','81','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','BM001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','BE001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','SC001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','SJ001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','GG001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','MM001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','SB001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','SK001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','SF001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-010','BC001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','BM001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','BE001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','SC001','98','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','SJ001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','GG001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','MM001','95','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','SB001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','SK001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','SF001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-002','BC001','92','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','BM001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','BE001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','SC001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','SJ001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','GG001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','MM001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','SB001','68','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','SK001','67','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','SF001','67','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-003','BC001','67','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','BM001','78','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','BE001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','SC001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','SJ001','78','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','GG001','78','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','MM001','78','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','SB001','78','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','SK001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','SF001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-005','BC001','77','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','BM001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','BE001','84','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','SC001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','SJ001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','GG001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','MM001','84','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','SB001','84','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','SK001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','SF001','82','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-006','BC001','84','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','BM001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','BE001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','SC001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','SJ001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','GG001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','MM001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','SB001','62','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','SK001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','SF001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-007','BC001','60','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','BM001','96','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','BE001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','SC001','96','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','SJ001','96','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','GG001','96','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','MM001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','SB001','100','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','SK001','98','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','SF001','96','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-009','BC001','98','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','BM001','97','A+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','BE001','67','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','SC001','73','A-');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','SJ001','59','C+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','GG001','81','A');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','MM001','64','B');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','SB001','69','B+');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','SK001','40','E');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','SF001','33','F');
Insert into ASGDB.SUBJECT_RESULT (RESULT_ID,SUBJECT_CODE,MARK,GRADE) values ('SR-001','BC001','47','D');
REM INSERTING into ASGDB.TEACHER
SET DEFINE OFF;
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-001','NURUL NORJIHAN BINTI MD ALI','850425-02-5739','52, JALAN DURIAN, TAMAN KAMPUNG DURIAN, 47500 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-1456789','FEMALE','CCU-001');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-002','TAN XIAO MEI','820614-06-3412','14, JALAN RAMBUTAN, TAMAN KAMPUNG RAMBUTAN, 47500 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-2456789','FEMALE','CCU-001');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-003','MUHAMMAD KHAIRUL BIN FIRDAUS','840705-04-9825','23, JALAN MANGGIS, TAMAN KAMPUNG MANGGIS, 47500 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-3456789','MALE','CCU-002');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-004','MUTHU A/L VENGADAHARNA','870226-05-0630','5, JALAN HIBISCUS, TAMAN BUNGA HIBISCUS, 47500 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-4456789','MALE','CCU-004');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-005','SARASWATHY A/P GANESAN','861017-05-1474','17, JALAN HIBISCUS, TAMAN BUNGA HIBISCUS, 47500 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-5456789','FEMALE','CCU-006');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-006','LIM JUN YI','850321-08-7841','33, JALAN PAHLAWAN, TAMAN PAHLAWAN, 47510 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-6456789','MALE','CCU-003');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-007','DYLAN PATAN ANAK ENTUSAN','830522-07-6521','40, JALAN DANDELION, TAMAN BUNGA DANDELION, 47520 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-7456789','MALE','CCU-001');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-008','MUHAMMAD MUQRI BIN ZULKIFI','850825-04-0930','44, JALAN DANDELION, TAMAN BUNGA DANDELION, 47520 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-8456789','MALE','CCU-005');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-009','SUZANA BINTI AHMAD NIZAM','870413-03-1817','62, JALAN ROS, TAMAN BUNGA ROS, 47520 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-9456789','FEMALE','CCU-005');
Insert into ASGDB.TEACHER (TEACHER_ID,TEACHER_NAME,TEACHER_IC,TEACHER_ADDRESS,TEACHER_CONTACTNO,TEACHER_GENDER,UNIT_ID) values ('T-010','KEW QIAO LING','840917-10-4418','10, JALAN PANGLIMA, TAMAN PANGLIMA TIGA, 47530 WILAYAH PERSEKUTUAN, KUALA LUMPUR','012-3156789','FEMALE','CCU-007');
--------------------------------------------------------
--  DDL for Index ACHIEVEMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."ACHIEVEMENT_PK" ON "ASGDB"."ACHIEVEMENT" ("ACHIEVEMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_ACL_IDX1" ON "ASGDB"."APEX$_ACL" ("WS_APP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_ACL_PK" ON "ASGDB"."APEX$_ACL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_FILES_IDX1" ON "ASGDB"."APEX$_WS_FILES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_FILES_IDX2" ON "ASGDB"."APEX$_WS_FILES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_FILES_PK" ON "ASGDB"."APEX$_WS_FILES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_HISTORY_IDX
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_HISTORY_IDX" ON "ASGDB"."APEX$_WS_HISTORY" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_LINKS_IDX1" ON "ASGDB"."APEX$_WS_LINKS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_LINKS_IDX2" ON "ASGDB"."APEX$_WS_LINKS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_LINKS_PK" ON "ASGDB"."APEX$_WS_LINKS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_NOTES_IDX1" ON "ASGDB"."APEX$_WS_NOTES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_NOTES_IDX2" ON "ASGDB"."APEX$_WS_NOTES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_NOTES_PK" ON "ASGDB"."APEX$_WS_NOTES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_IDX
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_ROWS_IDX" ON "ASGDB"."APEX$_WS_ROWS" ("WS_APP_ID", "DATA_GRID_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_ROWS_PK" ON "ASGDB"."APEX$_WS_ROWS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_TAGS_IDX1" ON "ASGDB"."APEX$_WS_TAGS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_TAGS_IDX2" ON "ASGDB"."APEX$_WS_TAGS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_TAGS_PK" ON "ASGDB"."APEX$_WS_TAGS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECHIST_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_WEBPG_SECHIST_IDX1" ON "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" ("WS_APP_ID", "WEBPAGE_ID", "SECTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECTIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_WEBPG_SECTIONS_PK" ON "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ATTENDANCE_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."ATTENDANCE_RECORD_PK" ON "ASGDB"."ATTENDANCE_RECORD" ("ATTENDANCE_DATE", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CLASSROOM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."CLASSROOM_PK" ON "ASGDB"."CLASSROOM" ("CLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_MEMBERSHIP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_MEMBERSHIP_PK" ON "ASGDB"."COCURRICULAR_MEMBERSHIP" ("RECORD_ID", "UNIT_ID", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_RECORD_PK" ON "ASGDB"."COCURRICULAR_RECORD" ("RECORD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_UNIT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_UNIT_PK" ON "ASGDB"."COCURRICULAR_UNIT" ("UNIT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DISCIPLINE_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."DISCIPLINE_RECORD_PK" ON "ASGDB"."DISCIPLINE_RECORD" ("DISCIPLINE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EXAMINATION_RESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."EXAMINATION_RESULT_PK" ON "ASGDB"."EXAMINATION_RESULT" ("RESULT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index GUARDIAN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."GUARDIAN_PK" ON "ASGDB"."GUARDIAN" ("GUARDIAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index RELATIONSHIP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."RELATIONSHIP_PK" ON "ASGDB"."RELATIONSHIP" ("GUARDIAN_ID", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SCHEDULE_SLOT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SCHEDULE_SLOT_PK" ON "ASGDB"."SCHEDULE_SLOT" ("SLOT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."STUDENT_PK" ON "ASGDB"."STUDENT" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUBJECT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SUBJECT_PK" ON "ASGDB"."SUBJECT" ("SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUBJECT_RESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SUBJECT_RESULT_PK" ON "ASGDB"."SUBJECT_RESULT" ("RESULT_ID", "SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."TEACHER_PK" ON "ASGDB"."TEACHER" ("TEACHER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ACHIEVEMENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."ACHIEVEMENT_PK" ON "ASGDB"."ACHIEVEMENT" ("ACHIEVEMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_ACL_IDX1" ON "ASGDB"."APEX$_ACL" ("WS_APP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_ACL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_ACL_PK" ON "ASGDB"."APEX$_ACL" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_FILES_IDX1" ON "ASGDB"."APEX$_WS_FILES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_FILES_IDX2" ON "ASGDB"."APEX$_WS_FILES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_FILES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_FILES_PK" ON "ASGDB"."APEX$_WS_FILES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_HISTORY_IDX
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_HISTORY_IDX" ON "ASGDB"."APEX$_WS_HISTORY" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_LINKS_IDX1" ON "ASGDB"."APEX$_WS_LINKS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_LINKS_IDX2" ON "ASGDB"."APEX$_WS_LINKS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_LINKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_LINKS_PK" ON "ASGDB"."APEX$_WS_LINKS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_NOTES_IDX1" ON "ASGDB"."APEX$_WS_NOTES" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_NOTES_IDX2" ON "ASGDB"."APEX$_WS_NOTES" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_NOTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_NOTES_PK" ON "ASGDB"."APEX$_WS_NOTES" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_IDX
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_ROWS_IDX" ON "ASGDB"."APEX$_WS_ROWS" ("WS_APP_ID", "DATA_GRID_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_ROWS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_ROWS_PK" ON "ASGDB"."APEX$_WS_ROWS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_TAGS_IDX1" ON "ASGDB"."APEX$_WS_TAGS" ("WS_APP_ID", "DATA_GRID_ID", "ROW_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_IDX2
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_TAGS_IDX2" ON "ASGDB"."APEX$_WS_TAGS" ("WS_APP_ID", "WEBPAGE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_TAGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_TAGS_PK" ON "ASGDB"."APEX$_WS_TAGS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECTIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."APEX$_WS_WEBPG_SECTIONS_PK" ON "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APEX$_WS_WEBPG_SECHIST_IDX1
--------------------------------------------------------

  CREATE INDEX "ASGDB"."APEX$_WS_WEBPG_SECHIST_IDX1" ON "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" ("WS_APP_ID", "WEBPAGE_ID", "SECTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ATTENDANCE_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."ATTENDANCE_RECORD_PK" ON "ASGDB"."ATTENDANCE_RECORD" ("ATTENDANCE_DATE", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CLASSROOM_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."CLASSROOM_PK" ON "ASGDB"."CLASSROOM" ("CLASS_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_MEMBERSHIP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_MEMBERSHIP_PK" ON "ASGDB"."COCURRICULAR_MEMBERSHIP" ("RECORD_ID", "UNIT_ID", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_RECORD_PK" ON "ASGDB"."COCURRICULAR_RECORD" ("RECORD_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index COCURRICULAR_UNIT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."COCURRICULAR_UNIT_PK" ON "ASGDB"."COCURRICULAR_UNIT" ("UNIT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index DISCIPLINE_RECORD_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."DISCIPLINE_RECORD_PK" ON "ASGDB"."DISCIPLINE_RECORD" ("DISCIPLINE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index EXAMINATION_RESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."EXAMINATION_RESULT_PK" ON "ASGDB"."EXAMINATION_RESULT" ("RESULT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index GUARDIAN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."GUARDIAN_PK" ON "ASGDB"."GUARDIAN" ("GUARDIAN_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index RELATIONSHIP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."RELATIONSHIP_PK" ON "ASGDB"."RELATIONSHIP" ("GUARDIAN_ID", "STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SCHEDULE_SLOT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SCHEDULE_SLOT_PK" ON "ASGDB"."SCHEDULE_SLOT" ("SLOT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index STUDENT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."STUDENT_PK" ON "ASGDB"."STUDENT" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUBJECT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SUBJECT_PK" ON "ASGDB"."SUBJECT" ("SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SUBJECT_RESULT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."SUBJECT_RESULT_PK" ON "ASGDB"."SUBJECT_RESULT" ("RESULT_ID", "SUBJECT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index TEACHER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "ASGDB"."TEACHER_PK" ON "ASGDB"."TEACHER" ("TEACHER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger APEX$_ACL_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_ACL_T1" 
before insert or update on "APEX$_ACL"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    :new.username := upper(:new.username);
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_ACL_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_FILES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_FILES_T1" 
before insert or update on "APEX$_WS_FILES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting and :new.image_alias is null then
        :new.image_alias := :new.name;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.content_last_update := sysdate;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(length(:new.content),0) <> nvl(length(:old.content),0) then
            :new.content_last_update := sysdate;
        end if;
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_FILES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_LINKS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_LINKS_T1" 
before insert or update on "APEX$_WS_LINKS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_LINKS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_NOTES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_NOTES_T1" 
before insert or update on "APEX$_WS_NOTES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_NOTES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_ROWS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_ROWS_T1" 
before insert or update on "APEX$_WS_ROWS"
for each row
declare
    l_tag_list apex_application_global.vc_arr2;
    type col_arr is table of varchar2(32767) index by varchar2(255);
    la_col_label col_arr;
    procedure datagrid_logging( 
        p_row_id       in number,
        p_ws_app_id    in number,
        p_data_grid_id in number,
        p_col_name     in varchar2,
        p_type         in varchar2,
        p_old_c        in varchar2 default null,
        p_new_c        in varchar2 default null,
        p_old_d        in date default null,
        p_new_d        in date default null,
        p_old_n        in number default null,
        p_new_n        in number default null)
    is
    begin
        case p_type
        when 'C' then
          if (p_old_c is null and p_new_c is not null) or (p_old_c is not null and p_new_c is null) or (p_old_c != p_new_c) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value, new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_c, p_new_c, sysdate, v('APP_USER'));
          end if;
        when 'D' then
          if (p_old_d is null and p_new_d is not null) or (p_old_d is not null and p_new_d is null) or (p_old_d != p_new_d) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_d, p_new_d, sysdate, v('APP_USER'));
        	  end if;
        when 'N' then
          if (p_old_n is null and p_new_n is not null) or (p_old_n is not null and p_new_n is null) or (p_old_n != p_new_n) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_n, p_new_n, sysdate, v('APP_USER'));
          end if;
        end case;
    end datagrid_logging;
    procedure wa( p_c in out nocopy clob, p_buf in varchar2 )
    is
    l_lf varchar2(2) := unistr('\000a');
    begin
    if p_buf is not null then dbms_lob.writeappend( p_c, length(p_buf||l_lf), upper(p_buf)||l_lf); end if;
    end wa;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.load_order from dual;
        :new.change_count := 0;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.change_count := :old.change_count + 1;
    end if;
    --
    -- inserting remove chr 13
    --
    if instr(:new.c001,chr(13)) > 0 then :new.c001 := replace(:new.c001,chr(13),null); end if;
    if instr(:new.c002,chr(13)) > 0 then :new.c002 := replace(:new.c002,chr(13),null); end if;
    if instr(:new.c003,chr(13)) > 0 then :new.c003 := replace(:new.c003,chr(13),null); end if;
    if instr(:new.c004,chr(13)) > 0 then :new.c004 := replace(:new.c004,chr(13),null); end if;
    if instr(:new.c005,chr(13)) > 0 then :new.c005 := replace(:new.c005,chr(13),null); end if;
    if instr(:new.c006,chr(13)) > 0 then :new.c006 := replace(:new.c006,chr(13),null); end if;
    if instr(:new.c007,chr(13)) > 0 then :new.c007 := replace(:new.c007,chr(13),null); end if;
    if instr(:new.c008,chr(13)) > 0 then :new.c008 := replace(:new.c008,chr(13),null); end if;
    if instr(:new.c009,chr(13)) > 0 then :new.c009 := replace(:new.c009,chr(13),null); end if;
    if instr(:new.c010,chr(13)) > 0 then :new.c010 := replace(:new.c010,chr(13),null); end if;
    if instr(:new.c011,chr(13)) > 0 then :new.c011 := replace(:new.c011,chr(13),null); end if;
    if instr(:new.c012,chr(13)) > 0 then :new.c012 := replace(:new.c012,chr(13),null); end if;
    if instr(:new.c013,chr(13)) > 0 then :new.c013 := replace(:new.c013,chr(13),null); end if;
    if instr(:new.c014,chr(13)) > 0 then :new.c014 := replace(:new.c014,chr(13),null); end if;
    if instr(:new.c015,chr(13)) > 0 then :new.c015 := replace(:new.c015,chr(13),null); end if;
    if instr(:new.c016,chr(13)) > 0 then :new.c016 := replace(:new.c016,chr(13),null); end if;
    if instr(:new.c017,chr(13)) > 0 then :new.c017 := replace(:new.c017,chr(13),null); end if;
    if instr(:new.c018,chr(13)) > 0 then :new.c018 := replace(:new.c018,chr(13),null); end if;
    if instr(:new.c019,chr(13)) > 0 then :new.c019 := replace(:new.c019,chr(13),null); end if;
    if instr(:new.c020,chr(13)) > 0 then :new.c020 := replace(:new.c010,chr(23),null); end if;
    if instr(:new.c021,chr(13)) > 0 then :new.c021 := replace(:new.c001,chr(23),null); end if;
    if instr(:new.c022,chr(13)) > 0 then :new.c022 := replace(:new.c002,chr(23),null); end if;
    if instr(:new.c023,chr(13)) > 0 then :new.c023 := replace(:new.c003,chr(23),null); end if;
    if instr(:new.c024,chr(13)) > 0 then :new.c024 := replace(:new.c004,chr(23),null); end if;
    if instr(:new.c025,chr(13)) > 0 then :new.c025 := replace(:new.c005,chr(23),null); end if;
    if instr(:new.c026,chr(13)) > 0 then :new.c026 := replace(:new.c006,chr(23),null); end if;
    if instr(:new.c027,chr(13)) > 0 then :new.c027 := replace(:new.c007,chr(23),null); end if;
    if instr(:new.c028,chr(13)) > 0 then :new.c028 := replace(:new.c008,chr(23),null); end if;
    if instr(:new.c029,chr(13)) > 0 then :new.c029 := replace(:new.c009,chr(23),null); end if;
    if instr(:new.c030,chr(13)) > 0 then :new.c030 := replace(:new.c030,chr(13),null); end if;
    if instr(:new.c031,chr(13)) > 0 then :new.c031 := replace(:new.c031,chr(13),null); end if;
    if instr(:new.c032,chr(13)) > 0 then :new.c032 := replace(:new.c032,chr(13),null); end if;
    if instr(:new.c033,chr(13)) > 0 then :new.c033 := replace(:new.c033,chr(13),null); end if;
    if instr(:new.c034,chr(13)) > 0 then :new.c034 := replace(:new.c034,chr(13),null); end if;
    if instr(:new.c035,chr(13)) > 0 then :new.c035 := replace(:new.c035,chr(13),null); end if;
    if instr(:new.c036,chr(13)) > 0 then :new.c036 := replace(:new.c036,chr(13),null); end if;
    if instr(:new.c037,chr(13)) > 0 then :new.c037 := replace(:new.c037,chr(13),null); end if;
    if instr(:new.c038,chr(13)) > 0 then :new.c038 := replace(:new.c038,chr(13),null); end if;
    if instr(:new.c039,chr(13)) > 0 then :new.c039 := replace(:new.c039,chr(13),null); end if;
    if instr(:new.c040,chr(13)) > 0 then :new.c040 := replace(:new.c040,chr(13),null); end if;
    if instr(:new.c041,chr(13)) > 0 then :new.c041 := replace(:new.c041,chr(13),null); end if;
    if instr(:new.c042,chr(13)) > 0 then :new.c042 := replace(:new.c042,chr(13),null); end if;
    if instr(:new.c043,chr(13)) > 0 then :new.c043 := replace(:new.c043,chr(13),null); end if;
    if instr(:new.c044,chr(13)) > 0 then :new.c044 := replace(:new.c044,chr(13),null); end if;
    if instr(:new.c045,chr(13)) > 0 then :new.c045 := replace(:new.c045,chr(13),null); end if;
    if instr(:new.c046,chr(13)) > 0 then :new.c046 := replace(:new.c046,chr(13),null); end if;
    if instr(:new.c047,chr(13)) > 0 then :new.c047 := replace(:new.c047,chr(13),null); end if;
    if instr(:new.c048,chr(13)) > 0 then :new.c048 := replace(:new.c048,chr(13),null); end if;
    if instr(:new.c049,chr(13)) > 0 then :new.c049 := replace(:new.c049,chr(13),null); end if;
    if instr(:new.c050,chr(13)) > 0 then :new.c050 := replace(:new.c050,chr(13),null); end if;
    if :new.search_clob is null then
        dbms_lob.createtemporary( :new.search_clob, false, dbms_lob.session );
    else
        dbms_lob.trim( :new.search_clob, 0 );
    end if;
    wa(:new.search_clob,:new.c001);wa(:new.search_clob,:new.c002);wa(:new.search_clob,:new.c003);
    wa(:new.search_clob,:new.c004);wa(:new.search_clob,:new.c005);wa(:new.search_clob,:new.c006);
    wa(:new.search_clob,:new.c007);wa(:new.search_clob,:new.c008);wa(:new.search_clob,:new.c009);
    wa(:new.search_clob,:new.c010);wa(:new.search_clob,:new.c011);wa(:new.search_clob,:new.c012);
    wa(:new.search_clob,:new.c013);wa(:new.search_clob,:new.c014);wa(:new.search_clob,:new.c015);
    wa(:new.search_clob,:new.c016);wa(:new.search_clob,:new.c017);wa(:new.search_clob,:new.c018);
    wa(:new.search_clob,:new.c019);wa(:new.search_clob,:new.c020);wa(:new.search_clob,:new.c021);
    wa(:new.search_clob,:new.c022);wa(:new.search_clob,:new.c023);wa(:new.search_clob,:new.c024);
    wa(:new.search_clob,:new.c025);wa(:new.search_clob,:new.c026);wa(:new.search_clob,:new.c027);
    wa(:new.search_clob,:new.c028);wa(:new.search_clob,:new.c029);wa(:new.search_clob,:new.c030);
    wa(:new.search_clob,:new.c031);wa(:new.search_clob,:new.c032);wa(:new.search_clob,:new.c033);
    wa(:new.search_clob,:new.c034);wa(:new.search_clob,:new.c035);wa(:new.search_clob,:new.c036);
    wa(:new.search_clob,:new.c037);wa(:new.search_clob,:new.c038);wa(:new.search_clob,:new.c039);
    wa(:new.search_clob,:new.c040);wa(:new.search_clob,:new.c041);wa(:new.search_clob,:new.c042);
    wa(:new.search_clob,:new.c043);wa(:new.search_clob,:new.c044);wa(:new.search_clob,:new.c045);
    wa(:new.search_clob,:new.c046);wa(:new.search_clob,:new.c047);wa(:new.search_clob,:new.c048);
    wa(:new.search_clob,:new.c049);wa(:new.search_clob,:new.c050);
    --
    -- history
    --
    if updating then
       -- initialize column label array
       for i in 1..50
       loop
           la_col_label('C'||to_char(i,'FM009')) := null;
           la_col_label('N'||to_char(i,'FM009')) := null;
           la_col_label('D'||to_char(i,'FM009')) := null;
       end loop;
       -- get column label array
       for c1 in (select column_alias, report_label 
                  from apex_ws_data_grid_col
                  where data_grid_id = :new.data_grid_id)
       loop
           la_col_label(c1.column_alias) := c1.report_label;
       end loop;
       -- strings
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C001'),'C',:old.c001,:new.c001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C002'),'C',:old.c002,:new.c002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C003'),'C',:old.c003,:new.c003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C004'),'C',:old.c004,:new.c004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C005'),'C',:old.c005,:new.c005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C006'),'C',:old.c006,:new.c006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C007'),'C',:old.c007,:new.c007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C008'),'C',:old.c008,:new.c008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C009'),'C',:old.c009,:new.c009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C010'),'C',:old.c010,:new.c010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C011'),'C',:old.c011,:new.c011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C012'),'C',:old.c012,:new.c012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C013'),'C',:old.c013,:new.c013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C014'),'C',:old.c014,:new.c014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C015'),'C',:old.c015,:new.c015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C016'),'C',:old.c016,:new.c016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C017'),'C',:old.c017,:new.c017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C018'),'C',:old.c018,:new.c018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C019'),'C',:old.c019,:new.c019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C020'),'C',:old.c020,:new.c020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C021'),'C',:old.c021,:new.c021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C022'),'C',:old.c022,:new.c022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C023'),'C',:old.c023,:new.c023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C024'),'C',:old.c024,:new.c024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C025'),'C',:old.c025,:new.c025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C026'),'C',:old.c026,:new.c026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C027'),'C',:old.c027,:new.c027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C028'),'C',:old.c028,:new.c028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C029'),'C',:old.c029,:new.c029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C030'),'C',:old.c030,:new.c030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C031'),'C',:old.c031,:new.c031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C032'),'C',:old.c032,:new.c032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C033'),'C',:old.c033,:new.c033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C034'),'C',:old.c034,:new.c034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C035'),'C',:old.c035,:new.c035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C036'),'C',:old.c036,:new.c036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C037'),'C',:old.c037,:new.c037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C038'),'C',:old.c038,:new.c038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C039'),'C',:old.c039,:new.c039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C040'),'C',:old.c040,:new.c040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C041'),'C',:old.c041,:new.c041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C042'),'C',:old.c042,:new.c042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C043'),'C',:old.c043,:new.c043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C044'),'C',:old.c044,:new.c044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C045'),'C',:old.c045,:new.c045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C046'),'C',:old.c046,:new.c046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C047'),'C',:old.c047,:new.c047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C048'),'C',:old.c048,:new.c048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C049'),'C',:old.c049,:new.c049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C050'),'C',:old.c050,:new.c050);
       -- numbers
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N001'),'N',null,null,null,null,:old.n001,:new.n001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N002'),'N',null,null,null,null,:old.n002,:new.n002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N003'),'N',null,null,null,null,:old.n003,:new.n003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N004'),'N',null,null,null,null,:old.n004,:new.n004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N005'),'N',null,null,null,null,:old.n005,:new.n005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N006'),'N',null,null,null,null,:old.n006,:new.n006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N007'),'N',null,null,null,null,:old.n007,:new.n007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N008'),'N',null,null,null,null,:old.n008,:new.n008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N009'),'N',null,null,null,null,:old.n009,:new.n009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N010'),'N',null,null,null,null,:old.n010,:new.n010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N011'),'N',null,null,null,null,:old.n011,:new.n011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N012'),'N',null,null,null,null,:old.n012,:new.n012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N013'),'N',null,null,null,null,:old.n013,:new.n013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N014'),'N',null,null,null,null,:old.n014,:new.n014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N015'),'N',null,null,null,null,:old.n015,:new.n015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N016'),'N',null,null,null,null,:old.n016,:new.n016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N017'),'N',null,null,null,null,:old.n017,:new.n017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N018'),'N',null,null,null,null,:old.n018,:new.n018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N019'),'N',null,null,null,null,:old.n019,:new.n019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N020'),'N',null,null,null,null,:old.n020,:new.n020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N021'),'N',null,null,null,null,:old.n021,:new.n021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N022'),'N',null,null,null,null,:old.n022,:new.n022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N023'),'N',null,null,null,null,:old.n023,:new.n023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N024'),'N',null,null,null,null,:old.n024,:new.n024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N025'),'N',null,null,null,null,:old.n025,:new.n025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N026'),'N',null,null,null,null,:old.n026,:new.n026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N027'),'N',null,null,null,null,:old.n027,:new.n027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N028'),'N',null,null,null,null,:old.n028,:new.n028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N029'),'N',null,null,null,null,:old.n029,:new.n029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N030'),'N',null,null,null,null,:old.n030,:new.n030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N031'),'N',null,null,null,null,:old.n031,:new.n031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N032'),'N',null,null,null,null,:old.n032,:new.n032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N033'),'N',null,null,null,null,:old.n033,:new.n033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N034'),'N',null,null,null,null,:old.n034,:new.n034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N035'),'N',null,null,null,null,:old.n035,:new.n035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N036'),'N',null,null,null,null,:old.n036,:new.n036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N037'),'N',null,null,null,null,:old.n037,:new.n037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N038'),'N',null,null,null,null,:old.n038,:new.n038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N039'),'N',null,null,null,null,:old.n039,:new.n039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N040'),'N',null,null,null,null,:old.n040,:new.n040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N041'),'N',null,null,null,null,:old.n041,:new.n041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N042'),'N',null,null,null,null,:old.n042,:new.n042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N043'),'N',null,null,null,null,:old.n043,:new.n043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N044'),'N',null,null,null,null,:old.n044,:new.n044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N045'),'N',null,null,null,null,:old.n045,:new.n045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N046'),'N',null,null,null,null,:old.n046,:new.n046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N047'),'N',null,null,null,null,:old.n047,:new.n047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N048'),'N',null,null,null,null,:old.n048,:new.n048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N049'),'N',null,null,null,null,:old.n049,:new.n049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N050'),'N',null,null,null,null,:old.n050,:new.n050);
       -- dates
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D001'),'D',null,null,:old.d001,:new.d001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D002'),'D',null,null,:old.d002,:new.d002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D003'),'D',null,null,:old.d003,:new.d003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D004'),'D',null,null,:old.d004,:new.d004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D005'),'D',null,null,:old.d005,:new.d005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D006'),'D',null,null,:old.d006,:new.d006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D007'),'D',null,null,:old.d007,:new.d007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D008'),'D',null,null,:old.d008,:new.d008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D009'),'D',null,null,:old.d009,:new.d009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D010'),'D',null,null,:old.d010,:new.d010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D011'),'D',null,null,:old.d011,:new.d011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D012'),'D',null,null,:old.d012,:new.d012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D013'),'D',null,null,:old.d013,:new.d013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D014'),'D',null,null,:old.d014,:new.d014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D015'),'D',null,null,:old.d015,:new.d015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D016'),'D',null,null,:old.d016,:new.d016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D017'),'D',null,null,:old.d017,:new.d017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D018'),'D',null,null,:old.d018,:new.d018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D019'),'D',null,null,:old.d019,:new.d019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D020'),'D',null,null,:old.d020,:new.d020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D021'),'D',null,null,:old.d021,:new.d021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D022'),'D',null,null,:old.d022,:new.d022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D023'),'D',null,null,:old.d023,:new.d023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D024'),'D',null,null,:old.d024,:new.d024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D025'),'D',null,null,:old.d025,:new.d025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D026'),'D',null,null,:old.d026,:new.d026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D027'),'D',null,null,:old.d027,:new.d027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D028'),'D',null,null,:old.d028,:new.d028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D029'),'D',null,null,:old.d029,:new.d029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D030'),'D',null,null,:old.d030,:new.d030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D031'),'D',null,null,:old.d031,:new.d031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D032'),'D',null,null,:old.d032,:new.d032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D033'),'D',null,null,:old.d033,:new.d033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D034'),'D',null,null,:old.d034,:new.d034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D035'),'D',null,null,:old.d035,:new.d035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D036'),'D',null,null,:old.d036,:new.d036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D037'),'D',null,null,:old.d037,:new.d037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D038'),'D',null,null,:old.d038,:new.d038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D039'),'D',null,null,:old.d039,:new.d039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D040'),'D',null,null,:old.d040,:new.d040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D041'),'D',null,null,:old.d041,:new.d041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D042'),'D',null,null,:old.d042,:new.d042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D043'),'D',null,null,:old.d043,:new.d043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D044'),'D',null,null,:old.d044,:new.d044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D045'),'D',null,null,:old.d045,:new.d045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D046'),'D',null,null,:old.d046,:new.d046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D047'),'D',null,null,:old.d047,:new.d047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D048'),'D',null,null,:old.d048,:new.d048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D049'),'D',null,null,:old.d049,:new.d049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D050'),'D',null,null,:old.d050,:new.d050);
    end if;
    --
    -- set owner
    --
    if :new.owner is null then
        :new.owner := :new.created_by;
    end if;
end;

/
ALTER TRIGGER "ASGDB"."APEX$_WS_ROWS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_TAGS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_TAGS_T1" 
before insert or update on "APEX$_WS_TAGS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_TAGS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_WEBPG_SECTIONS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_WEBPG_SECTIONS_T1" 
before insert or update on "APEX$_WS_WEBPG_SECTIONS"
for each row
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_WEBPG_SECTIONS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_ACL_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_ACL_T1" 
before insert or update on "APEX$_ACL"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    :new.username := upper(:new.username);
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_ACL_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_FILES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_FILES_T1" 
before insert or update on "APEX$_WS_FILES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting and :new.image_alias is null then
        :new.image_alias := :new.name;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.content_last_update := sysdate;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(length(:new.content),0) <> nvl(length(:old.content),0) then
            :new.content_last_update := sysdate;
        end if;
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_FILES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_LINKS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_LINKS_T1" 
before insert or update on "APEX$_WS_LINKS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_LINKS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_NOTES_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_NOTES_T1" 
before insert or update on "APEX$_WS_NOTES"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_NOTES_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_ROWS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_ROWS_T1" 
before insert or update on "APEX$_WS_ROWS"
for each row
declare
    l_tag_list apex_application_global.vc_arr2;
    type col_arr is table of varchar2(32767) index by varchar2(255);
    la_col_label col_arr;
    procedure datagrid_logging( 
        p_row_id       in number,
        p_ws_app_id    in number,
        p_data_grid_id in number,
        p_col_name     in varchar2,
        p_type         in varchar2,
        p_old_c        in varchar2 default null,
        p_new_c        in varchar2 default null,
        p_old_d        in date default null,
        p_new_d        in date default null,
        p_old_n        in number default null,
        p_new_n        in number default null)
    is
    begin
        case p_type
        when 'C' then
          if (p_old_c is null and p_new_c is not null) or (p_old_c is not null and p_new_c is null) or (p_old_c != p_new_c) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value, new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_c, p_new_c, sysdate, v('APP_USER'));
          end if;
        when 'D' then
          if (p_old_d is null and p_new_d is not null) or (p_old_d is not null and p_new_d is null) or (p_old_d != p_new_d) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_d, p_new_d, sysdate, v('APP_USER'));
        	  end if;
        when 'N' then
          if (p_old_n is null and p_new_n is not null) or (p_old_n is not null and p_new_n is null) or (p_old_n != p_new_n) then
              insert into apex$_ws_history (row_id, ws_app_id, data_grid_id, column_name, old_value,  new_value, change_date, application_user_id)
              values (p_row_id, p_ws_app_id, p_data_grid_id, p_col_name, p_old_n, p_new_n, sysdate, v('APP_USER'));
          end if;
        end case;
    end datagrid_logging;
    procedure wa( p_c in out nocopy clob, p_buf in varchar2 )
    is
    l_lf varchar2(2) := unistr('\000a');
    begin
    if p_buf is not null then dbms_lob.writeappend( p_c, length(p_buf||l_lf), upper(p_buf)||l_lf); end if;
    end wa;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.load_order from dual;
        :new.change_count := 0;
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        :new.change_count := :old.change_count + 1;
    end if;
    --
    -- inserting remove chr 13
    --
    if instr(:new.c001,chr(13)) > 0 then :new.c001 := replace(:new.c001,chr(13),null); end if;
    if instr(:new.c002,chr(13)) > 0 then :new.c002 := replace(:new.c002,chr(13),null); end if;
    if instr(:new.c003,chr(13)) > 0 then :new.c003 := replace(:new.c003,chr(13),null); end if;
    if instr(:new.c004,chr(13)) > 0 then :new.c004 := replace(:new.c004,chr(13),null); end if;
    if instr(:new.c005,chr(13)) > 0 then :new.c005 := replace(:new.c005,chr(13),null); end if;
    if instr(:new.c006,chr(13)) > 0 then :new.c006 := replace(:new.c006,chr(13),null); end if;
    if instr(:new.c007,chr(13)) > 0 then :new.c007 := replace(:new.c007,chr(13),null); end if;
    if instr(:new.c008,chr(13)) > 0 then :new.c008 := replace(:new.c008,chr(13),null); end if;
    if instr(:new.c009,chr(13)) > 0 then :new.c009 := replace(:new.c009,chr(13),null); end if;
    if instr(:new.c010,chr(13)) > 0 then :new.c010 := replace(:new.c010,chr(13),null); end if;
    if instr(:new.c011,chr(13)) > 0 then :new.c011 := replace(:new.c011,chr(13),null); end if;
    if instr(:new.c012,chr(13)) > 0 then :new.c012 := replace(:new.c012,chr(13),null); end if;
    if instr(:new.c013,chr(13)) > 0 then :new.c013 := replace(:new.c013,chr(13),null); end if;
    if instr(:new.c014,chr(13)) > 0 then :new.c014 := replace(:new.c014,chr(13),null); end if;
    if instr(:new.c015,chr(13)) > 0 then :new.c015 := replace(:new.c015,chr(13),null); end if;
    if instr(:new.c016,chr(13)) > 0 then :new.c016 := replace(:new.c016,chr(13),null); end if;
    if instr(:new.c017,chr(13)) > 0 then :new.c017 := replace(:new.c017,chr(13),null); end if;
    if instr(:new.c018,chr(13)) > 0 then :new.c018 := replace(:new.c018,chr(13),null); end if;
    if instr(:new.c019,chr(13)) > 0 then :new.c019 := replace(:new.c019,chr(13),null); end if;
    if instr(:new.c020,chr(13)) > 0 then :new.c020 := replace(:new.c010,chr(23),null); end if;
    if instr(:new.c021,chr(13)) > 0 then :new.c021 := replace(:new.c001,chr(23),null); end if;
    if instr(:new.c022,chr(13)) > 0 then :new.c022 := replace(:new.c002,chr(23),null); end if;
    if instr(:new.c023,chr(13)) > 0 then :new.c023 := replace(:new.c003,chr(23),null); end if;
    if instr(:new.c024,chr(13)) > 0 then :new.c024 := replace(:new.c004,chr(23),null); end if;
    if instr(:new.c025,chr(13)) > 0 then :new.c025 := replace(:new.c005,chr(23),null); end if;
    if instr(:new.c026,chr(13)) > 0 then :new.c026 := replace(:new.c006,chr(23),null); end if;
    if instr(:new.c027,chr(13)) > 0 then :new.c027 := replace(:new.c007,chr(23),null); end if;
    if instr(:new.c028,chr(13)) > 0 then :new.c028 := replace(:new.c008,chr(23),null); end if;
    if instr(:new.c029,chr(13)) > 0 then :new.c029 := replace(:new.c009,chr(23),null); end if;
    if instr(:new.c030,chr(13)) > 0 then :new.c030 := replace(:new.c030,chr(13),null); end if;
    if instr(:new.c031,chr(13)) > 0 then :new.c031 := replace(:new.c031,chr(13),null); end if;
    if instr(:new.c032,chr(13)) > 0 then :new.c032 := replace(:new.c032,chr(13),null); end if;
    if instr(:new.c033,chr(13)) > 0 then :new.c033 := replace(:new.c033,chr(13),null); end if;
    if instr(:new.c034,chr(13)) > 0 then :new.c034 := replace(:new.c034,chr(13),null); end if;
    if instr(:new.c035,chr(13)) > 0 then :new.c035 := replace(:new.c035,chr(13),null); end if;
    if instr(:new.c036,chr(13)) > 0 then :new.c036 := replace(:new.c036,chr(13),null); end if;
    if instr(:new.c037,chr(13)) > 0 then :new.c037 := replace(:new.c037,chr(13),null); end if;
    if instr(:new.c038,chr(13)) > 0 then :new.c038 := replace(:new.c038,chr(13),null); end if;
    if instr(:new.c039,chr(13)) > 0 then :new.c039 := replace(:new.c039,chr(13),null); end if;
    if instr(:new.c040,chr(13)) > 0 then :new.c040 := replace(:new.c040,chr(13),null); end if;
    if instr(:new.c041,chr(13)) > 0 then :new.c041 := replace(:new.c041,chr(13),null); end if;
    if instr(:new.c042,chr(13)) > 0 then :new.c042 := replace(:new.c042,chr(13),null); end if;
    if instr(:new.c043,chr(13)) > 0 then :new.c043 := replace(:new.c043,chr(13),null); end if;
    if instr(:new.c044,chr(13)) > 0 then :new.c044 := replace(:new.c044,chr(13),null); end if;
    if instr(:new.c045,chr(13)) > 0 then :new.c045 := replace(:new.c045,chr(13),null); end if;
    if instr(:new.c046,chr(13)) > 0 then :new.c046 := replace(:new.c046,chr(13),null); end if;
    if instr(:new.c047,chr(13)) > 0 then :new.c047 := replace(:new.c047,chr(13),null); end if;
    if instr(:new.c048,chr(13)) > 0 then :new.c048 := replace(:new.c048,chr(13),null); end if;
    if instr(:new.c049,chr(13)) > 0 then :new.c049 := replace(:new.c049,chr(13),null); end if;
    if instr(:new.c050,chr(13)) > 0 then :new.c050 := replace(:new.c050,chr(13),null); end if;
    if :new.search_clob is null then
        dbms_lob.createtemporary( :new.search_clob, false, dbms_lob.session );
    else
        dbms_lob.trim( :new.search_clob, 0 );
    end if;
    wa(:new.search_clob,:new.c001);wa(:new.search_clob,:new.c002);wa(:new.search_clob,:new.c003);
    wa(:new.search_clob,:new.c004);wa(:new.search_clob,:new.c005);wa(:new.search_clob,:new.c006);
    wa(:new.search_clob,:new.c007);wa(:new.search_clob,:new.c008);wa(:new.search_clob,:new.c009);
    wa(:new.search_clob,:new.c010);wa(:new.search_clob,:new.c011);wa(:new.search_clob,:new.c012);
    wa(:new.search_clob,:new.c013);wa(:new.search_clob,:new.c014);wa(:new.search_clob,:new.c015);
    wa(:new.search_clob,:new.c016);wa(:new.search_clob,:new.c017);wa(:new.search_clob,:new.c018);
    wa(:new.search_clob,:new.c019);wa(:new.search_clob,:new.c020);wa(:new.search_clob,:new.c021);
    wa(:new.search_clob,:new.c022);wa(:new.search_clob,:new.c023);wa(:new.search_clob,:new.c024);
    wa(:new.search_clob,:new.c025);wa(:new.search_clob,:new.c026);wa(:new.search_clob,:new.c027);
    wa(:new.search_clob,:new.c028);wa(:new.search_clob,:new.c029);wa(:new.search_clob,:new.c030);
    wa(:new.search_clob,:new.c031);wa(:new.search_clob,:new.c032);wa(:new.search_clob,:new.c033);
    wa(:new.search_clob,:new.c034);wa(:new.search_clob,:new.c035);wa(:new.search_clob,:new.c036);
    wa(:new.search_clob,:new.c037);wa(:new.search_clob,:new.c038);wa(:new.search_clob,:new.c039);
    wa(:new.search_clob,:new.c040);wa(:new.search_clob,:new.c041);wa(:new.search_clob,:new.c042);
    wa(:new.search_clob,:new.c043);wa(:new.search_clob,:new.c044);wa(:new.search_clob,:new.c045);
    wa(:new.search_clob,:new.c046);wa(:new.search_clob,:new.c047);wa(:new.search_clob,:new.c048);
    wa(:new.search_clob,:new.c049);wa(:new.search_clob,:new.c050);
    --
    -- history
    --
    if updating then
       -- initialize column label array
       for i in 1..50
       loop
           la_col_label('C'||to_char(i,'FM009')) := null;
           la_col_label('N'||to_char(i,'FM009')) := null;
           la_col_label('D'||to_char(i,'FM009')) := null;
       end loop;
       -- get column label array
       for c1 in (select column_alias, report_label 
                  from apex_ws_data_grid_col
                  where data_grid_id = :new.data_grid_id)
       loop
           la_col_label(c1.column_alias) := c1.report_label;
       end loop;
       -- strings
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C001'),'C',:old.c001,:new.c001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C002'),'C',:old.c002,:new.c002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C003'),'C',:old.c003,:new.c003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C004'),'C',:old.c004,:new.c004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C005'),'C',:old.c005,:new.c005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C006'),'C',:old.c006,:new.c006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C007'),'C',:old.c007,:new.c007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C008'),'C',:old.c008,:new.c008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C009'),'C',:old.c009,:new.c009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C010'),'C',:old.c010,:new.c010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C011'),'C',:old.c011,:new.c011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C012'),'C',:old.c012,:new.c012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C013'),'C',:old.c013,:new.c013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C014'),'C',:old.c014,:new.c014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C015'),'C',:old.c015,:new.c015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C016'),'C',:old.c016,:new.c016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C017'),'C',:old.c017,:new.c017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C018'),'C',:old.c018,:new.c018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C019'),'C',:old.c019,:new.c019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C020'),'C',:old.c020,:new.c020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C021'),'C',:old.c021,:new.c021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C022'),'C',:old.c022,:new.c022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C023'),'C',:old.c023,:new.c023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C024'),'C',:old.c024,:new.c024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C025'),'C',:old.c025,:new.c025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C026'),'C',:old.c026,:new.c026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C027'),'C',:old.c027,:new.c027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C028'),'C',:old.c028,:new.c028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C029'),'C',:old.c029,:new.c029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C030'),'C',:old.c030,:new.c030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C031'),'C',:old.c031,:new.c031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C032'),'C',:old.c032,:new.c032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C033'),'C',:old.c033,:new.c033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C034'),'C',:old.c034,:new.c034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C035'),'C',:old.c035,:new.c035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C036'),'C',:old.c036,:new.c036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C037'),'C',:old.c037,:new.c037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C038'),'C',:old.c038,:new.c038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C039'),'C',:old.c039,:new.c039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C040'),'C',:old.c040,:new.c040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C041'),'C',:old.c041,:new.c041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C042'),'C',:old.c042,:new.c042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C043'),'C',:old.c043,:new.c043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C044'),'C',:old.c044,:new.c044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C045'),'C',:old.c045,:new.c045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C046'),'C',:old.c046,:new.c046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C047'),'C',:old.c047,:new.c047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C048'),'C',:old.c048,:new.c048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C049'),'C',:old.c049,:new.c049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('C050'),'C',:old.c050,:new.c050);
       -- numbers
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N001'),'N',null,null,null,null,:old.n001,:new.n001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N002'),'N',null,null,null,null,:old.n002,:new.n002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N003'),'N',null,null,null,null,:old.n003,:new.n003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N004'),'N',null,null,null,null,:old.n004,:new.n004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N005'),'N',null,null,null,null,:old.n005,:new.n005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N006'),'N',null,null,null,null,:old.n006,:new.n006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N007'),'N',null,null,null,null,:old.n007,:new.n007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N008'),'N',null,null,null,null,:old.n008,:new.n008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N009'),'N',null,null,null,null,:old.n009,:new.n009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N010'),'N',null,null,null,null,:old.n010,:new.n010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N011'),'N',null,null,null,null,:old.n011,:new.n011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N012'),'N',null,null,null,null,:old.n012,:new.n012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N013'),'N',null,null,null,null,:old.n013,:new.n013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N014'),'N',null,null,null,null,:old.n014,:new.n014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N015'),'N',null,null,null,null,:old.n015,:new.n015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N016'),'N',null,null,null,null,:old.n016,:new.n016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N017'),'N',null,null,null,null,:old.n017,:new.n017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N018'),'N',null,null,null,null,:old.n018,:new.n018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N019'),'N',null,null,null,null,:old.n019,:new.n019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N020'),'N',null,null,null,null,:old.n020,:new.n020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N021'),'N',null,null,null,null,:old.n021,:new.n021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N022'),'N',null,null,null,null,:old.n022,:new.n022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N023'),'N',null,null,null,null,:old.n023,:new.n023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N024'),'N',null,null,null,null,:old.n024,:new.n024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N025'),'N',null,null,null,null,:old.n025,:new.n025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N026'),'N',null,null,null,null,:old.n026,:new.n026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N027'),'N',null,null,null,null,:old.n027,:new.n027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N028'),'N',null,null,null,null,:old.n028,:new.n028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N029'),'N',null,null,null,null,:old.n029,:new.n029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N030'),'N',null,null,null,null,:old.n030,:new.n030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N031'),'N',null,null,null,null,:old.n031,:new.n031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N032'),'N',null,null,null,null,:old.n032,:new.n032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N033'),'N',null,null,null,null,:old.n033,:new.n033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N034'),'N',null,null,null,null,:old.n034,:new.n034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N035'),'N',null,null,null,null,:old.n035,:new.n035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N036'),'N',null,null,null,null,:old.n036,:new.n036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N037'),'N',null,null,null,null,:old.n037,:new.n037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N038'),'N',null,null,null,null,:old.n038,:new.n038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N039'),'N',null,null,null,null,:old.n039,:new.n039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N040'),'N',null,null,null,null,:old.n040,:new.n040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N041'),'N',null,null,null,null,:old.n041,:new.n041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N042'),'N',null,null,null,null,:old.n042,:new.n042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N043'),'N',null,null,null,null,:old.n043,:new.n043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N044'),'N',null,null,null,null,:old.n044,:new.n044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N045'),'N',null,null,null,null,:old.n045,:new.n045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N046'),'N',null,null,null,null,:old.n046,:new.n046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N047'),'N',null,null,null,null,:old.n047,:new.n047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N048'),'N',null,null,null,null,:old.n048,:new.n048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N049'),'N',null,null,null,null,:old.n049,:new.n049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('N050'),'N',null,null,null,null,:old.n050,:new.n050);
       -- dates
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D001'),'D',null,null,:old.d001,:new.d001);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D002'),'D',null,null,:old.d002,:new.d002);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D003'),'D',null,null,:old.d003,:new.d003);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D004'),'D',null,null,:old.d004,:new.d004);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D005'),'D',null,null,:old.d005,:new.d005);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D006'),'D',null,null,:old.d006,:new.d006);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D007'),'D',null,null,:old.d007,:new.d007);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D008'),'D',null,null,:old.d008,:new.d008);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D009'),'D',null,null,:old.d009,:new.d009);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D010'),'D',null,null,:old.d010,:new.d010);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D011'),'D',null,null,:old.d011,:new.d011);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D012'),'D',null,null,:old.d012,:new.d012);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D013'),'D',null,null,:old.d013,:new.d013);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D014'),'D',null,null,:old.d014,:new.d014);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D015'),'D',null,null,:old.d015,:new.d015);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D016'),'D',null,null,:old.d016,:new.d016);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D017'),'D',null,null,:old.d017,:new.d017);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D018'),'D',null,null,:old.d018,:new.d018);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D019'),'D',null,null,:old.d019,:new.d019);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D020'),'D',null,null,:old.d020,:new.d020);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D021'),'D',null,null,:old.d021,:new.d021);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D022'),'D',null,null,:old.d022,:new.d022);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D023'),'D',null,null,:old.d023,:new.d023);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D024'),'D',null,null,:old.d024,:new.d024);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D025'),'D',null,null,:old.d025,:new.d025);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D026'),'D',null,null,:old.d026,:new.d026);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D027'),'D',null,null,:old.d027,:new.d027);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D028'),'D',null,null,:old.d028,:new.d028);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D029'),'D',null,null,:old.d029,:new.d029);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D030'),'D',null,null,:old.d030,:new.d030);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D031'),'D',null,null,:old.d031,:new.d031);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D032'),'D',null,null,:old.d032,:new.d032);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D033'),'D',null,null,:old.d033,:new.d033);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D034'),'D',null,null,:old.d034,:new.d034);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D035'),'D',null,null,:old.d035,:new.d035);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D036'),'D',null,null,:old.d036,:new.d036);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D037'),'D',null,null,:old.d037,:new.d037);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D038'),'D',null,null,:old.d038,:new.d038);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D039'),'D',null,null,:old.d039,:new.d039);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D040'),'D',null,null,:old.d040,:new.d040);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D041'),'D',null,null,:old.d041,:new.d041);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D042'),'D',null,null,:old.d042,:new.d042);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D043'),'D',null,null,:old.d043,:new.d043);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D044'),'D',null,null,:old.d044,:new.d044);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D045'),'D',null,null,:old.d045,:new.d045);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D046'),'D',null,null,:old.d046,:new.d046);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D047'),'D',null,null,:old.d047,:new.d047);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D048'),'D',null,null,:old.d048,:new.d048);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D049'),'D',null,null,:old.d049,:new.d049);
       datagrid_logging(:new.id,:new.ws_app_id,:new.data_grid_id,la_col_label('D050'),'D',null,null,:old.d050,:new.d050);
    end if;
    --
    -- set owner
    --
    if :new.owner is null then
        :new.owner := :new.created_by;
    end if;
end;

/
ALTER TRIGGER "ASGDB"."APEX$_WS_ROWS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_TAGS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_TAGS_T1" 
before insert or update on "APEX$_WS_TAGS"
for each row
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_TAGS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APEX$_WS_WEBPG_SECTIONS_T1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "ASGDB"."APEX$_WS_WEBPG_SECTIONS_T1" 
before insert or update on "APEX$_WS_WEBPG_SECTIONS"
for each row
declare
    l_sequence_changed varchar2(1) := 'N';
    l_title_changed varchar2(1) := 'N';
    l_content_changed varchar2(1) := 'N';
    procedure clob_upper( p_content in clob, p_content_upper in out nocopy clob)
    is
    l_buf varchar2(32767);
    l_off number;
    l_amt number;
    begin
    if p_content is not null then
        l_amt := 8000;
        l_off := 1;
         dbms_lob.trim( p_content_upper, 0);
         begin
             loop
                 dbms_lob.read( p_content, l_amt, l_off, l_buf );
                 l_buf := upper( l_buf );
                 dbms_lob.writeappend( p_content_upper, length(l_buf), l_buf);
                 l_off := l_off + l_amt;
                 l_amt := 8000;
             end loop;
         exception
             when no_data_found then null;
         end;
     end if;
end clob_upper;
begin
    --
    -- maintain pk and timestamps
    --
    if inserting and :new.id is null then
        select to_number(sys_guid(),'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') into :new.id from dual;
    end if;
    if :new.section_type = 'NAV_PAGE' then
        if :new.nav_include_link is null then
            :new.nav_include_link := 'Y';
        end if;
    end if;
    if inserting and :new.content is not null then
        dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        clob_upper( :new.content, :new.content_upper );
    elsif updating then
        if :new.content_upper is null then
            dbms_lob.createtemporary( :new.content_upper, false, dbms_lob.call );
        end if;
        clob_upper( :new.content, :new.content_upper );
    end if;
    if inserting then
        :new.created_on := sysdate;
        :new.created_by := nvl(v('APP_USER'),user);
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
    elsif updating then
        :new.updated_on := sysdate;
        :new.updated_by := nvl(v('APP_USER'),user);
        if nvl(:old.display_sequence,-999) != nvl(:new.display_sequence,-999) then
            l_sequence_changed := 'Y';
        end if;
        if nvl(:old.title,'jKKwZk') != nvl(:new.title,'jKKwZk') then
            l_title_changed := 'Y';
        end if;
        if dbms_lob.compare(:new.content,:old.content) != 0 or nvl(length(:new.content),0) != nvl(length(:old.content),0) then
            l_content_changed := 'Y';
        end if;
        if l_sequence_changed = 'Y' or l_title_changed = 'Y' or l_content_changed = 'Y' then
            insert into apex$_ws_webpg_section_history (section_id, ws_app_id, webpage_id, old_display_sequence, new_display_sequence,
            old_title, new_title, old_content, new_content, change_date, application_user_id)
            values (:new.id, :new.ws_app_id, :new.webpage_id,
                    decode(l_sequence_changed,'Y',:old.display_sequence,null), decode(l_sequence_changed,'Y',:new.display_sequence,null),
                    decode(l_title_changed,'Y',:old.title,null), decode(l_title_changed,'Y',:new.title,null),
                    decode(l_content_changed,'Y',:old.content,null), decode(l_content_changed,'Y',:new.content,null), sysdate, v('APP_USER'));
        end if;
    end if;
end;
/
ALTER TRIGGER "ASGDB"."APEX$_WS_WEBPG_SECTIONS_T1" ENABLE;
--------------------------------------------------------
--  DDL for Function CUSTOM_AUTH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ASGDB"."CUSTOM_AUTH" (p_username in VARCHAR2, p_password in VARCHAR2)
return BOOLEAN
is
  l_password varchar2(4000);
  l_stored_password varchar2(4000);
  l_expires_on date;
  l_count number;
begin
-- First, check to see if the user is in the user table
select count(*) into l_count from demo_users where user_name = p_username;
if l_count > 0 then
  -- First, we fetch the stored hashed password & expire date
  select password, expires_on into l_stored_password, l_expires_on
   from demo_users where user_name = p_username;

  -- Next, we check to see if the user's account is expired
  -- If it is, return FALSE
  if l_expires_on > sysdate or l_expires_on is null then

    -- If the account is not expired, we have to apply the custom hash
    -- function to the password
    l_password := custom_hash(p_username, p_password);

    -- Finally, we compare them to see if they are the same and return
    -- either TRUE or FALSE
    if l_password = l_stored_password then
      return true;
    else
      return false;
    end if;
  else
    return false;
  end if;
else
  -- The username provided is not in the DEMO_USERS table
  return false;
end if;
end;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ASGDB"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'G8NCP42MY1YKU0LW0SETBP0LPVIST0';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;

/
GRANT EXECUTE ON "APEX_040000"."V" TO PUBLIC;
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "ASGDB"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'G8NCP42MY1YKU0LW0SETBP0LPVIST0';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;

/
--------------------------------------------------------
--  DDL for Synonymn DUAL
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "DUAL" FOR "SYS"."DUAL";
--------------------------------------------------------
--  DDL for Synonymn V
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "V" FOR "APEX_040000"."V";
--------------------------------------------------------
--  DDL for Synonymn APEX_APPLICATION_GLOBAL
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "APEX_APPLICATION_GLOBAL" FOR "APEX_040000"."APEX_APPLICATION_GLOBAL";
--------------------------------------------------------
--  DDL for Synonymn APEX_WS_DATA_GRID_COL
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "APEX_WS_DATA_GRID_COL" FOR "APEX_040000"."APEX_WS_DATA_GRID_COL";
--------------------------------------------------------
--  DDL for Synonymn DBMS_LOB
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "DBMS_LOB" FOR "SYS"."DBMS_LOB";
--------------------------------------------------------
--  DDL for Synonymn DBMS_OBFUSCATION_TOOLKIT
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "DBMS_OBFUSCATION_TOOLKIT" FOR "SYS"."DBMS_OBFUSCATION_TOOLKIT";
--------------------------------------------------------
--  DDL for Synonymn UTL_RAW
--------------------------------------------------------

  CREATE OR REPLACE PUBLIC SYNONYM "UTL_RAW" FOR "SYS"."UTL_RAW";
--------------------------------------------------------
--  Constraints for Table ACHIEVEMENT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."ACHIEVEMENT" ADD CONSTRAINT "ACHIEVEMENT_PK" PRIMARY KEY ("ACHIEVEMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."ACHIEVEMENT" MODIFY ("ACHIEVEMENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_ACL
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_ACL" ADD CONSTRAINT "APEX$_ACL_PRIV_CK" CHECK (priv in ('R','C','A')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("PRIV" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_ACL" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" MODIFY ("MIME_TYPE" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_FILES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_HISTORY
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_HISTORY" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_HISTORY" MODIFY ("ROW_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_SH_CK" CHECK (show_on_homepage in ('Y','N')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" MODIFY ("LINK_NAME" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_ROWS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" ADD CONSTRAINT "APEX$_WS_ROWS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" MODIFY ("DATA_GRID_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_ROWS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_CL_CK" CHECK (component_level in ('WEBSHEET','ROW','WORKSPACE','WEBPAGE')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTIONS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTIONS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_3D_CK" CHECK (chart_3d in ('Y','N')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_LINK_CK" CHECK (nav_include_link in ('Y','N')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" ADD CONSTRAINT "APEX$_WS_WEBPG_SECTION_TYPE_CK" CHECK (section_type in ('TEXT','DATA','CHART','NAV_PAGE','NAV_SECTION')) ENABLE;
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("CREATED_ON" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("SECTION_TYPE" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTIONS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table APEX$_WS_WEBPG_SECTION_HISTORY
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("CHANGE_DATE" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("APPLICATION_USER_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WEBPAGE_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("WS_APP_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."APEX$_WS_WEBPG_SECTION_HISTORY" MODIFY ("SECTION_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ATTENDANCE_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."ATTENDANCE_RECORD" ADD CONSTRAINT "ATTENDANCE_RECORD_PK" PRIMARY KEY ("ATTENDANCE_DATE", "STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."ATTENDANCE_RECORD" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."ATTENDANCE_RECORD" MODIFY ("ATTENDANCE_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CLASSROOM
--------------------------------------------------------

  ALTER TABLE "ASGDB"."CLASSROOM" ADD CONSTRAINT "CLASSROOM_PK" PRIMARY KEY ("CLASS_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."CLASSROOM" MODIFY ("CLASS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COCURRICULAR_MEMBERSHIP
--------------------------------------------------------

  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" ADD CONSTRAINT "COCURRICULAR_MEMBERSHIP_PK" PRIMARY KEY ("RECORD_ID", "UNIT_ID", "STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" MODIFY ("UNIT_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" MODIFY ("RECORD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COCURRICULAR_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."COCURRICULAR_RECORD" ADD CONSTRAINT "COCURRICULAR_RECORD_PK" PRIMARY KEY ("RECORD_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."COCURRICULAR_RECORD" MODIFY ("RECORD_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COCURRICULAR_UNIT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."COCURRICULAR_UNIT" ADD CONSTRAINT "COCURRICULAR_UNIT_PK" PRIMARY KEY ("UNIT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."COCURRICULAR_UNIT" MODIFY ("UNIT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DISCIPLINE_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."DISCIPLINE_RECORD" ADD CONSTRAINT "DISCIPLINE_RECORD_PK" PRIMARY KEY ("DISCIPLINE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."DISCIPLINE_RECORD" MODIFY ("DISCIPLINE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EXAMINATION_RESULT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."EXAMINATION_RESULT" ADD CONSTRAINT "EXAMINATION_RESULT_PK" PRIMARY KEY ("RESULT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."EXAMINATION_RESULT" MODIFY ("RESULT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GUARDIAN
--------------------------------------------------------

  ALTER TABLE "ASGDB"."GUARDIAN" ADD CONSTRAINT "GUARDIAN_PK" PRIMARY KEY ("GUARDIAN_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."GUARDIAN" MODIFY ("GUARDIAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RELATIONSHIP
--------------------------------------------------------

  ALTER TABLE "ASGDB"."RELATIONSHIP" ADD CONSTRAINT "RELATIONSHIP_PK" PRIMARY KEY ("GUARDIAN_ID", "STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."RELATIONSHIP" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."RELATIONSHIP" MODIFY ("GUARDIAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SCHEDULE_SLOT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SCHEDULE_SLOT" ADD CONSTRAINT "SCHEDULE_SLOT_PK" PRIMARY KEY ("SLOT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."SCHEDULE_SLOT" MODIFY ("SLOT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STUDENT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."STUDENT" ADD CONSTRAINT "STUDENT_PK" PRIMARY KEY ("STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."STUDENT" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUBJECT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SUBJECT" ADD CONSTRAINT "SUBJECT_PK" PRIMARY KEY ("SUBJECT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."SUBJECT" MODIFY ("SUBJECT_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUBJECT_RESULT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SUBJECT_RESULT" ADD CONSTRAINT "SUBJECT_RESULT_PK" PRIMARY KEY ("RESULT_ID", "SUBJECT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."SUBJECT_RESULT" MODIFY ("SUBJECT_CODE" NOT NULL ENABLE);
  ALTER TABLE "ASGDB"."SUBJECT_RESULT" MODIFY ("RESULT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TEACHER
--------------------------------------------------------

  ALTER TABLE "ASGDB"."TEACHER" ADD CONSTRAINT "TEACHER_PK" PRIMARY KEY ("TEACHER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "ASGDB"."TEACHER" MODIFY ("TEACHER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ACHIEVEMENT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."ACHIEVEMENT" ADD CONSTRAINT "ACHIEVEMENT_COCURRICULAR__FK1" FOREIGN KEY ("RECORD_ID")
	  REFERENCES "ASGDB"."COCURRICULAR_RECORD" ("RECORD_ID") ENABLE;
  ALTER TABLE "ASGDB"."ACHIEVEMENT" ADD CONSTRAINT "ACHIEVEMENT_STUDENT_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_FILES
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_FILES" ADD CONSTRAINT "APEX$_WS_FILES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "ASGDB"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_LINKS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_LINKS" ADD CONSTRAINT "APEX$_WS_LINKS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "ASGDB"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_NOTES
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_NOTES" ADD CONSTRAINT "APEX$_WS_NOTES_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "ASGDB"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table APEX$_WS_TAGS
--------------------------------------------------------

  ALTER TABLE "ASGDB"."APEX$_WS_TAGS" ADD CONSTRAINT "APEX$_WS_TAGS_FK" FOREIGN KEY ("ROW_ID")
	  REFERENCES "ASGDB"."APEX$_WS_ROWS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ATTENDANCE_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."ATTENDANCE_RECORD" ADD CONSTRAINT "ATTENDANCE_RECORD_STUDENT_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLASSROOM
--------------------------------------------------------

  ALTER TABLE "ASGDB"."CLASSROOM" ADD CONSTRAINT "CLASSROOM_STUDENT_FK1" FOREIGN KEY ("CLASS_MONITOR")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
  ALTER TABLE "ASGDB"."CLASSROOM" ADD CONSTRAINT "CLASSROOM_TEACHER_FK1" FOREIGN KEY ("CLASS_TEACHER")
	  REFERENCES "ASGDB"."TEACHER" ("TEACHER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COCURRICULAR_MEMBERSHIP
--------------------------------------------------------

  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" ADD CONSTRAINT "COCURRICULAR_MEMBERSHIP_C_FK1" FOREIGN KEY ("UNIT_ID")
	  REFERENCES "ASGDB"."COCURRICULAR_UNIT" ("UNIT_ID") ENABLE;
  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" ADD CONSTRAINT "COCURRICULAR_MEMBERSHIP_C_FK2" FOREIGN KEY ("RECORD_ID")
	  REFERENCES "ASGDB"."COCURRICULAR_RECORD" ("RECORD_ID") ENABLE;
  ALTER TABLE "ASGDB"."COCURRICULAR_MEMBERSHIP" ADD CONSTRAINT "COCURRICULAR_MEMBERSHIP_S_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COCURRICULAR_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."COCURRICULAR_RECORD" ADD CONSTRAINT "COCURRICULAR_RECORD_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DISCIPLINE_RECORD
--------------------------------------------------------

  ALTER TABLE "ASGDB"."DISCIPLINE_RECORD" ADD CONSTRAINT "DISCIPLINE_RECORD_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXAMINATION_RESULT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."EXAMINATION_RESULT" ADD CONSTRAINT "EXAMINATION_RESULT_STUDEN_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RELATIONSHIP
--------------------------------------------------------

  ALTER TABLE "ASGDB"."RELATIONSHIP" ADD CONSTRAINT "RELATIONSHIP_GUARDIAN_FK1" FOREIGN KEY ("GUARDIAN_ID")
	  REFERENCES "ASGDB"."GUARDIAN" ("GUARDIAN_ID") ENABLE;
  ALTER TABLE "ASGDB"."RELATIONSHIP" ADD CONSTRAINT "RELATIONSHIP_STUDENT_FK1" FOREIGN KEY ("STUDENT_ID")
	  REFERENCES "ASGDB"."STUDENT" ("STUDENT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SCHEDULE_SLOT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SCHEDULE_SLOT" ADD CONSTRAINT "SCHEDULE_SLOT_CLASSROOM_FK1" FOREIGN KEY ("CLASS_ID")
	  REFERENCES "ASGDB"."CLASSROOM" ("CLASS_ID") ENABLE;
  ALTER TABLE "ASGDB"."SCHEDULE_SLOT" ADD CONSTRAINT "SCHEDULE_SLOT_SUBJECT_FK1" FOREIGN KEY ("SUBJECT_CODE")
	  REFERENCES "ASGDB"."SUBJECT" ("SUBJECT_CODE") ENABLE;
  ALTER TABLE "ASGDB"."SCHEDULE_SLOT" ADD CONSTRAINT "SCHEDULE_SLOT_TEACHER_FK1" FOREIGN KEY ("TEACHER_ID")
	  REFERENCES "ASGDB"."TEACHER" ("TEACHER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STUDENT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."STUDENT" ADD CONSTRAINT "STUDENT_CLASSROOM_FK1" FOREIGN KEY ("CLASS_ID")
	  REFERENCES "ASGDB"."CLASSROOM" ("CLASS_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUBJECT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SUBJECT" ADD CONSTRAINT "SUBJECT_TEACHER_FK1" FOREIGN KEY ("SUBJECT_COORDINATOR")
	  REFERENCES "ASGDB"."TEACHER" ("TEACHER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SUBJECT_RESULT
--------------------------------------------------------

  ALTER TABLE "ASGDB"."SUBJECT_RESULT" ADD CONSTRAINT "SUBJECT_RESULT_EXAMINATIO_FK1" FOREIGN KEY ("RESULT_ID")
	  REFERENCES "ASGDB"."EXAMINATION_RESULT" ("RESULT_ID") ENABLE;
  ALTER TABLE "ASGDB"."SUBJECT_RESULT" ADD CONSTRAINT "SUBJECT_RESULT_SUBJECT_FK1" FOREIGN KEY ("SUBJECT_CODE")
	  REFERENCES "ASGDB"."SUBJECT" ("SUBJECT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table TEACHER
--------------------------------------------------------

  ALTER TABLE "ASGDB"."TEACHER" ADD CONSTRAINT "TEACHER_COCURRICULAR_UNIT_FK1" FOREIGN KEY ("UNIT_ID")
	  REFERENCES "ASGDB"."COCURRICULAR_UNIT" ("UNIT_ID") ENABLE;
